'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ds_P_Movil_Adm"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ds_P_Movil_Adm
    Inherits Global.System.Data.DataSet
    
    Private tableMOV_s_SolicitudesDespachoReporte As MOV_s_SolicitudesDespachoReporteDataTable
    
    Private tableGEN_s_Cliente_PorCodigo As GEN_s_Cliente_PorCodigoDataTable
    
    Private tableMOV_s_Factura As MOV_s_FacturaDataTable
    
    Private tableMOV_s_FacturaDetalle As MOV_s_FacturaDetalleDataTable
    
    Private tableMOV_s_FacturaEmpleado As MOV_s_FacturaEmpleadoDataTable
    
    Private tableMOV_s_FacturaHistorico As MOV_s_FacturaHistoricoDataTable
    
    Private tableMOV_s_PagoHistorico As MOV_s_PagoHistoricoDataTable
    
    Private tableMOV_s_SolicitudHistorico As MOV_s_SolicitudHistoricoDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MOV_s_SolicitudesDespachoReporte")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_SolicitudesDespachoReporteDataTable(ds.Tables("MOV_s_SolicitudesDespachoReporte")))
            End If
            If (Not (ds.Tables("GEN_s_Cliente_PorCodigo")) Is Nothing) Then
                MyBase.Tables.Add(New GEN_s_Cliente_PorCodigoDataTable(ds.Tables("GEN_s_Cliente_PorCodigo")))
            End If
            If (Not (ds.Tables("MOV_s_Factura")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaDataTable(ds.Tables("MOV_s_Factura")))
            End If
            If (Not (ds.Tables("MOV_s_FacturaDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaDetalleDataTable(ds.Tables("MOV_s_FacturaDetalle")))
            End If
            If (Not (ds.Tables("MOV_s_FacturaEmpleado")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaEmpleadoDataTable(ds.Tables("MOV_s_FacturaEmpleado")))
            End If
            If (Not (ds.Tables("MOV_s_FacturaHistorico")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaHistoricoDataTable(ds.Tables("MOV_s_FacturaHistorico")))
            End If
            If (Not (ds.Tables("MOV_s_PagoHistorico")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_PagoHistoricoDataTable(ds.Tables("MOV_s_PagoHistorico")))
            End If
            If (Not (ds.Tables("MOV_s_SolicitudHistorico")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_SolicitudHistoricoDataTable(ds.Tables("MOV_s_SolicitudHistorico")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_SolicitudesDespachoReporte() As MOV_s_SolicitudesDespachoReporteDataTable
        Get
            Return Me.tableMOV_s_SolicitudesDespachoReporte
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GEN_s_Cliente_PorCodigo() As GEN_s_Cliente_PorCodigoDataTable
        Get
            Return Me.tableGEN_s_Cliente_PorCodigo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_Factura() As MOV_s_FacturaDataTable
        Get
            Return Me.tableMOV_s_Factura
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_FacturaDetalle() As MOV_s_FacturaDetalleDataTable
        Get
            Return Me.tableMOV_s_FacturaDetalle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_FacturaEmpleado() As MOV_s_FacturaEmpleadoDataTable
        Get
            Return Me.tableMOV_s_FacturaEmpleado
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_FacturaHistorico() As MOV_s_FacturaHistoricoDataTable
        Get
            Return Me.tableMOV_s_FacturaHistorico
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_PagoHistorico() As MOV_s_PagoHistoricoDataTable
        Get
            Return Me.tableMOV_s_PagoHistorico
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_s_SolicitudHistorico() As MOV_s_SolicitudHistoricoDataTable
        Get
            Return Me.tableMOV_s_SolicitudHistorico
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ds_P_Movil_Adm = CType(MyBase.Clone,ds_P_Movil_Adm)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("MOV_s_SolicitudesDespachoReporte")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_SolicitudesDespachoReporteDataTable(ds.Tables("MOV_s_SolicitudesDespachoReporte")))
            End If
            If (Not (ds.Tables("GEN_s_Cliente_PorCodigo")) Is Nothing) Then
                MyBase.Tables.Add(New GEN_s_Cliente_PorCodigoDataTable(ds.Tables("GEN_s_Cliente_PorCodigo")))
            End If
            If (Not (ds.Tables("MOV_s_Factura")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaDataTable(ds.Tables("MOV_s_Factura")))
            End If
            If (Not (ds.Tables("MOV_s_FacturaDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaDetalleDataTable(ds.Tables("MOV_s_FacturaDetalle")))
            End If
            If (Not (ds.Tables("MOV_s_FacturaEmpleado")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaEmpleadoDataTable(ds.Tables("MOV_s_FacturaEmpleado")))
            End If
            If (Not (ds.Tables("MOV_s_FacturaHistorico")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_FacturaHistoricoDataTable(ds.Tables("MOV_s_FacturaHistorico")))
            End If
            If (Not (ds.Tables("MOV_s_PagoHistorico")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_PagoHistoricoDataTable(ds.Tables("MOV_s_PagoHistorico")))
            End If
            If (Not (ds.Tables("MOV_s_SolicitudHistorico")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_s_SolicitudHistoricoDataTable(ds.Tables("MOV_s_SolicitudHistorico")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMOV_s_SolicitudesDespachoReporte = CType(MyBase.Tables("MOV_s_SolicitudesDespachoReporte"),MOV_s_SolicitudesDespachoReporteDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_SolicitudesDespachoReporte) Is Nothing) Then
                Me.tableMOV_s_SolicitudesDespachoReporte.InitVars
            End If
        End If
        Me.tableGEN_s_Cliente_PorCodigo = CType(MyBase.Tables("GEN_s_Cliente_PorCodigo"),GEN_s_Cliente_PorCodigoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGEN_s_Cliente_PorCodigo) Is Nothing) Then
                Me.tableGEN_s_Cliente_PorCodigo.InitVars
            End If
        End If
        Me.tableMOV_s_Factura = CType(MyBase.Tables("MOV_s_Factura"),MOV_s_FacturaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_Factura) Is Nothing) Then
                Me.tableMOV_s_Factura.InitVars
            End If
        End If
        Me.tableMOV_s_FacturaDetalle = CType(MyBase.Tables("MOV_s_FacturaDetalle"),MOV_s_FacturaDetalleDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_FacturaDetalle) Is Nothing) Then
                Me.tableMOV_s_FacturaDetalle.InitVars
            End If
        End If
        Me.tableMOV_s_FacturaEmpleado = CType(MyBase.Tables("MOV_s_FacturaEmpleado"),MOV_s_FacturaEmpleadoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_FacturaEmpleado) Is Nothing) Then
                Me.tableMOV_s_FacturaEmpleado.InitVars
            End If
        End If
        Me.tableMOV_s_FacturaHistorico = CType(MyBase.Tables("MOV_s_FacturaHistorico"),MOV_s_FacturaHistoricoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_FacturaHistorico) Is Nothing) Then
                Me.tableMOV_s_FacturaHistorico.InitVars
            End If
        End If
        Me.tableMOV_s_PagoHistorico = CType(MyBase.Tables("MOV_s_PagoHistorico"),MOV_s_PagoHistoricoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_PagoHistorico) Is Nothing) Then
                Me.tableMOV_s_PagoHistorico.InitVars
            End If
        End If
        Me.tableMOV_s_SolicitudHistorico = CType(MyBase.Tables("MOV_s_SolicitudHistorico"),MOV_s_SolicitudHistoricoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_s_SolicitudHistorico) Is Nothing) Then
                Me.tableMOV_s_SolicitudHistorico.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ds_P_Movil_Adm"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsReportes.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMOV_s_SolicitudesDespachoReporte = New MOV_s_SolicitudesDespachoReporteDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_SolicitudesDespachoReporte)
        Me.tableGEN_s_Cliente_PorCodigo = New GEN_s_Cliente_PorCodigoDataTable()
        MyBase.Tables.Add(Me.tableGEN_s_Cliente_PorCodigo)
        Me.tableMOV_s_Factura = New MOV_s_FacturaDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_Factura)
        Me.tableMOV_s_FacturaDetalle = New MOV_s_FacturaDetalleDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_FacturaDetalle)
        Me.tableMOV_s_FacturaEmpleado = New MOV_s_FacturaEmpleadoDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_FacturaEmpleado)
        Me.tableMOV_s_FacturaHistorico = New MOV_s_FacturaHistoricoDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_FacturaHistorico)
        Me.tableMOV_s_PagoHistorico = New MOV_s_PagoHistoricoDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_PagoHistorico)
        Me.tableMOV_s_SolicitudHistorico = New MOV_s_SolicitudHistoricoDataTable()
        MyBase.Tables.Add(Me.tableMOV_s_SolicitudHistorico)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_SolicitudesDespachoReporte() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeGEN_s_Cliente_PorCodigo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_Factura() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_FacturaDetalle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_FacturaEmpleado() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_FacturaHistorico() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_PagoHistorico() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_s_SolicitudHistorico() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_SolicitudesDespachoReporteRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_SolicitudesDespachoReporteRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub GEN_s_Cliente_PorCodigoRowChangeEventHandler(ByVal sender As Object, ByVal e As GEN_s_Cliente_PorCodigoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_FacturaRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_FacturaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_FacturaDetalleRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_FacturaDetalleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_FacturaEmpleadoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_FacturaEmpleadoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_FacturaHistoricoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_FacturaHistoricoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_PagoHistoricoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_PagoHistoricoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_s_SolicitudHistoricoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_s_SolicitudHistoricoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_SolicitudesDespachoReporteDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_SolicitudesDespachoReporteRow)
        
        Private columndtFecRec As Global.System.Data.DataColumn
        
        Private columnvcObs As Global.System.Data.DataColumn
        
        Private columnF_vcCodIMEI As Global.System.Data.DataColumn
        
        Private columnvcNomModDis As Global.System.Data.DataColumn
        
        Private columnF_vcNumLin As Global.System.Data.DataColumn
        
        Private columnF_vcCodEmp As Global.System.Data.DataColumn
        
        Private columnvcNomEmp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_SolicitudesDespachoReporte"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtFecRecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtFecRec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcObsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcObs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcCodIMEIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcCodIMEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomModDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomModDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcNumLinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcNumLin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcCodEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcCodEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_SolicitudesDespachoReporteRow
            Get
                Return CType(Me.Rows(index),MOV_s_SolicitudesDespachoReporteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudesDespachoReporteRowChanging As MOV_s_SolicitudesDespachoReporteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudesDespachoReporteRowChanged As MOV_s_SolicitudesDespachoReporteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudesDespachoReporteRowDeleting As MOV_s_SolicitudesDespachoReporteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudesDespachoReporteRowDeleted As MOV_s_SolicitudesDespachoReporteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_SolicitudesDespachoReporteRow(ByVal row As MOV_s_SolicitudesDespachoReporteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_SolicitudesDespachoReporteRow(ByVal dtFecRec As Date, ByVal vcObs As String, ByVal F_vcCodIMEI As String, ByVal vcNomModDis As String, ByVal F_vcNumLin As String, ByVal F_vcCodEmp As String, ByVal vcNomEmp As String) As MOV_s_SolicitudesDespachoReporteRow
            Dim rowMOV_s_SolicitudesDespachoReporteRow As MOV_s_SolicitudesDespachoReporteRow = CType(Me.NewRow,MOV_s_SolicitudesDespachoReporteRow)
            Dim columnValuesArray() As Object = New Object() {dtFecRec, vcObs, F_vcCodIMEI, vcNomModDis, F_vcNumLin, F_vcCodEmp, vcNomEmp}
            rowMOV_s_SolicitudesDespachoReporteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_SolicitudesDespachoReporteRow)
            Return rowMOV_s_SolicitudesDespachoReporteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_SolicitudesDespachoReporteDataTable = CType(MyBase.Clone,MOV_s_SolicitudesDespachoReporteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_SolicitudesDespachoReporteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndtFecRec = MyBase.Columns("dtFecRec")
            Me.columnvcObs = MyBase.Columns("vcObs")
            Me.columnF_vcCodIMEI = MyBase.Columns("F_vcCodIMEI")
            Me.columnvcNomModDis = MyBase.Columns("vcNomModDis")
            Me.columnF_vcNumLin = MyBase.Columns("F_vcNumLin")
            Me.columnF_vcCodEmp = MyBase.Columns("F_vcCodEmp")
            Me.columnvcNomEmp = MyBase.Columns("vcNomEmp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndtFecRec = New Global.System.Data.DataColumn("dtFecRec", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtFecRec)
            Me.columnvcObs = New Global.System.Data.DataColumn("vcObs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcObs)
            Me.columnF_vcCodIMEI = New Global.System.Data.DataColumn("F_vcCodIMEI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcCodIMEI)
            Me.columnvcNomModDis = New Global.System.Data.DataColumn("vcNomModDis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomModDis)
            Me.columnF_vcNumLin = New Global.System.Data.DataColumn("F_vcNumLin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcNumLin)
            Me.columnF_vcCodEmp = New Global.System.Data.DataColumn("F_vcCodEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcCodEmp)
            Me.columnvcNomEmp = New Global.System.Data.DataColumn("vcNomEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEmp)
            Me.columnvcObs.AllowDBNull = false
            Me.columnvcObs.MaxLength = 255
            Me.columnF_vcCodIMEI.MaxLength = 50
            Me.columnvcNomModDis.MaxLength = 100
            Me.columnF_vcNumLin.MaxLength = 15
            Me.columnF_vcCodEmp.MaxLength = 15
            Me.columnvcNomEmp.MaxLength = 35
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_SolicitudesDespachoReporteRow() As MOV_s_SolicitudesDespachoReporteRow
            Return CType(Me.NewRow,MOV_s_SolicitudesDespachoReporteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_SolicitudesDespachoReporteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_SolicitudesDespachoReporteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_SolicitudesDespachoReporteRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudesDespachoReporteRowChanged(Me, New MOV_s_SolicitudesDespachoReporteRowChangeEvent(CType(e.Row,MOV_s_SolicitudesDespachoReporteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_SolicitudesDespachoReporteRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudesDespachoReporteRowChanging(Me, New MOV_s_SolicitudesDespachoReporteRowChangeEvent(CType(e.Row,MOV_s_SolicitudesDespachoReporteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_SolicitudesDespachoReporteRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudesDespachoReporteRowDeleted(Me, New MOV_s_SolicitudesDespachoReporteRowChangeEvent(CType(e.Row,MOV_s_SolicitudesDespachoReporteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_SolicitudesDespachoReporteRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudesDespachoReporteRowDeleting(Me, New MOV_s_SolicitudesDespachoReporteRowChangeEvent(CType(e.Row,MOV_s_SolicitudesDespachoReporteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_SolicitudesDespachoReporteRow(ByVal row As MOV_s_SolicitudesDespachoReporteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_SolicitudesDespachoReporteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GEN_s_Cliente_PorCodigoDataTable
        Inherits Global.System.Data.TypedTableBase(Of GEN_s_Cliente_PorCodigoRow)
        
        Private columnP_inCodCli As Global.System.Data.DataColumn
        
        Private columnvcNomCli As Global.System.Data.DataColumn
        
        Private columnF_inCodMon As Global.System.Data.DataColumn
        
        Private columnvcRUC As Global.System.Data.DataColumn
        
        Private columnvcDireccion As Global.System.Data.DataColumn
        
        Private columnvbLogCli As Global.System.Data.DataColumn
        
        Private columninEst As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GEN_s_Cliente_PorCodigo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P_inCodCliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_inCodCli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomCliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomCli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inCodMonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inCodMon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcRUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcRUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcDireccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcDireccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vbLogCliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvbLogCli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GEN_s_Cliente_PorCodigoRow
            Get
                Return CType(Me.Rows(index),GEN_s_Cliente_PorCodigoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GEN_s_Cliente_PorCodigoRowChanging As GEN_s_Cliente_PorCodigoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GEN_s_Cliente_PorCodigoRowChanged As GEN_s_Cliente_PorCodigoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GEN_s_Cliente_PorCodigoRowDeleting As GEN_s_Cliente_PorCodigoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GEN_s_Cliente_PorCodigoRowDeleted As GEN_s_Cliente_PorCodigoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddGEN_s_Cliente_PorCodigoRow(ByVal row As GEN_s_Cliente_PorCodigoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddGEN_s_Cliente_PorCodigoRow(ByVal P_inCodCli As Integer, ByVal vcNomCli As String, ByVal F_inCodMon As Integer, ByVal vcRUC As String, ByVal vcDireccion As String, ByVal vbLogCli() As Byte, ByVal inEst As Integer) As GEN_s_Cliente_PorCodigoRow
            Dim rowGEN_s_Cliente_PorCodigoRow As GEN_s_Cliente_PorCodigoRow = CType(Me.NewRow,GEN_s_Cliente_PorCodigoRow)
            Dim columnValuesArray() As Object = New Object() {P_inCodCli, vcNomCli, F_inCodMon, vcRUC, vcDireccion, vbLogCli, inEst}
            rowGEN_s_Cliente_PorCodigoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGEN_s_Cliente_PorCodigoRow)
            Return rowGEN_s_Cliente_PorCodigoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GEN_s_Cliente_PorCodigoDataTable = CType(MyBase.Clone,GEN_s_Cliente_PorCodigoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GEN_s_Cliente_PorCodigoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnP_inCodCli = MyBase.Columns("P_inCodCli")
            Me.columnvcNomCli = MyBase.Columns("vcNomCli")
            Me.columnF_inCodMon = MyBase.Columns("F_inCodMon")
            Me.columnvcRUC = MyBase.Columns("vcRUC")
            Me.columnvcDireccion = MyBase.Columns("vcDireccion")
            Me.columnvbLogCli = MyBase.Columns("vbLogCli")
            Me.columninEst = MyBase.Columns("inEst")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnP_inCodCli = New Global.System.Data.DataColumn("P_inCodCli", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_inCodCli)
            Me.columnvcNomCli = New Global.System.Data.DataColumn("vcNomCli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomCli)
            Me.columnF_inCodMon = New Global.System.Data.DataColumn("F_inCodMon", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inCodMon)
            Me.columnvcRUC = New Global.System.Data.DataColumn("vcRUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcRUC)
            Me.columnvcDireccion = New Global.System.Data.DataColumn("vcDireccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcDireccion)
            Me.columnvbLogCli = New Global.System.Data.DataColumn("vbLogCli", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvbLogCli)
            Me.columninEst = New Global.System.Data.DataColumn("inEst", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninEst)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnP_inCodCli}, false))
            Me.columnP_inCodCli.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewGEN_s_Cliente_PorCodigoRow() As GEN_s_Cliente_PorCodigoRow
            Return CType(Me.NewRow,GEN_s_Cliente_PorCodigoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GEN_s_Cliente_PorCodigoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GEN_s_Cliente_PorCodigoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GEN_s_Cliente_PorCodigoRowChangedEvent) Is Nothing) Then
                RaiseEvent GEN_s_Cliente_PorCodigoRowChanged(Me, New GEN_s_Cliente_PorCodigoRowChangeEvent(CType(e.Row,GEN_s_Cliente_PorCodigoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GEN_s_Cliente_PorCodigoRowChangingEvent) Is Nothing) Then
                RaiseEvent GEN_s_Cliente_PorCodigoRowChanging(Me, New GEN_s_Cliente_PorCodigoRowChangeEvent(CType(e.Row,GEN_s_Cliente_PorCodigoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GEN_s_Cliente_PorCodigoRowDeletedEvent) Is Nothing) Then
                RaiseEvent GEN_s_Cliente_PorCodigoRowDeleted(Me, New GEN_s_Cliente_PorCodigoRowChangeEvent(CType(e.Row,GEN_s_Cliente_PorCodigoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GEN_s_Cliente_PorCodigoRowDeletingEvent) Is Nothing) Then
                RaiseEvent GEN_s_Cliente_PorCodigoRowDeleting(Me, New GEN_s_Cliente_PorCodigoRowChangeEvent(CType(e.Row,GEN_s_Cliente_PorCodigoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveGEN_s_Cliente_PorCodigoRow(ByVal row As GEN_s_Cliente_PorCodigoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GEN_s_Cliente_PorCodigoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_FacturaDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_FacturaRow)
        
        Private columnP_inCodFac As Global.System.Data.DataColumn
        
        Private columndtFecFac As Global.System.Data.DataColumn
        
        Private columndcMonTot As Global.System.Data.DataColumn
        
        Private columndcImp As Global.System.Data.DataColumn
        
        Private columnF_inCodOpe As Global.System.Data.DataColumn
        
        Private columnF_inEst As Global.System.Data.DataColumn
        
        Private columndtFecGenFac As Global.System.Data.DataColumn
        
        Private columndcSubTot As Global.System.Data.DataColumn
        
        Private columndcTipCam As Global.System.Data.DataColumn
        
        Private columnF_inCodMon As Global.System.Data.DataColumn
        
        Private columndcIGV As Global.System.Data.DataColumn
        
        Private columnvcNomOpe As Global.System.Data.DataColumn
        
        Private columnvcNomEst As Global.System.Data.DataColumn
        
        Private columnvcCodFac As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_Factura"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P_inCodFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_inCodFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtFecFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtFecFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcMonTotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcMonTot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcImpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcImp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inCodOpeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inCodOpe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtFecGenFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtFecGenFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcSubTotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcSubTot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcTipCamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcTipCam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inCodMonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inCodMon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcIGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcIGV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomOpeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomOpe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcCodFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcCodFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_FacturaRow
            Get
                Return CType(Me.Rows(index),MOV_s_FacturaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaRowChanging As MOV_s_FacturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaRowChanged As MOV_s_FacturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaRowDeleting As MOV_s_FacturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaRowDeleted As MOV_s_FacturaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_FacturaRow(ByVal row As MOV_s_FacturaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_FacturaRow(ByVal P_inCodFac As Integer, ByVal dtFecFac As Date, ByVal dcMonTot As Decimal, ByVal dcImp As Decimal, ByVal F_inCodOpe As Integer, ByVal F_inEst As Integer, ByVal dtFecGenFac As Date, ByVal dcSubTot As Decimal, ByVal dcTipCam As Decimal, ByVal F_inCodMon As Integer, ByVal dcIGV As Decimal, ByVal vcNomOpe As String, ByVal vcNomEst As String, ByVal vcCodFac As String) As MOV_s_FacturaRow
            Dim rowMOV_s_FacturaRow As MOV_s_FacturaRow = CType(Me.NewRow,MOV_s_FacturaRow)
            Dim columnValuesArray() As Object = New Object() {P_inCodFac, dtFecFac, dcMonTot, dcImp, F_inCodOpe, F_inEst, dtFecGenFac, dcSubTot, dcTipCam, F_inCodMon, dcIGV, vcNomOpe, vcNomEst, vcCodFac}
            rowMOV_s_FacturaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_FacturaRow)
            Return rowMOV_s_FacturaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_FacturaDataTable = CType(MyBase.Clone,MOV_s_FacturaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_FacturaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnP_inCodFac = MyBase.Columns("P_inCodFac")
            Me.columndtFecFac = MyBase.Columns("dtFecFac")
            Me.columndcMonTot = MyBase.Columns("dcMonTot")
            Me.columndcImp = MyBase.Columns("dcImp")
            Me.columnF_inCodOpe = MyBase.Columns("F_inCodOpe")
            Me.columnF_inEst = MyBase.Columns("F_inEst")
            Me.columndtFecGenFac = MyBase.Columns("dtFecGenFac")
            Me.columndcSubTot = MyBase.Columns("dcSubTot")
            Me.columndcTipCam = MyBase.Columns("dcTipCam")
            Me.columnF_inCodMon = MyBase.Columns("F_inCodMon")
            Me.columndcIGV = MyBase.Columns("dcIGV")
            Me.columnvcNomOpe = MyBase.Columns("vcNomOpe")
            Me.columnvcNomEst = MyBase.Columns("vcNomEst")
            Me.columnvcCodFac = MyBase.Columns("vcCodFac")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnP_inCodFac = New Global.System.Data.DataColumn("P_inCodFac", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_inCodFac)
            Me.columndtFecFac = New Global.System.Data.DataColumn("dtFecFac", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtFecFac)
            Me.columndcMonTot = New Global.System.Data.DataColumn("dcMonTot", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcMonTot)
            Me.columndcImp = New Global.System.Data.DataColumn("dcImp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcImp)
            Me.columnF_inCodOpe = New Global.System.Data.DataColumn("F_inCodOpe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inCodOpe)
            Me.columnF_inEst = New Global.System.Data.DataColumn("F_inEst", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inEst)
            Me.columndtFecGenFac = New Global.System.Data.DataColumn("dtFecGenFac", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtFecGenFac)
            Me.columndcSubTot = New Global.System.Data.DataColumn("dcSubTot", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcSubTot)
            Me.columndcTipCam = New Global.System.Data.DataColumn("dcTipCam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcTipCam)
            Me.columnF_inCodMon = New Global.System.Data.DataColumn("F_inCodMon", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inCodMon)
            Me.columndcIGV = New Global.System.Data.DataColumn("dcIGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcIGV)
            Me.columnvcNomOpe = New Global.System.Data.DataColumn("vcNomOpe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomOpe)
            Me.columnvcNomEst = New Global.System.Data.DataColumn("vcNomEst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEst)
            Me.columnvcCodFac = New Global.System.Data.DataColumn("vcCodFac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcCodFac)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_FacturaRow() As MOV_s_FacturaRow
            Return CType(Me.NewRow,MOV_s_FacturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_FacturaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_FacturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_FacturaRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaRowChanged(Me, New MOV_s_FacturaRowChangeEvent(CType(e.Row,MOV_s_FacturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_FacturaRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaRowChanging(Me, New MOV_s_FacturaRowChangeEvent(CType(e.Row,MOV_s_FacturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_FacturaRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaRowDeleted(Me, New MOV_s_FacturaRowChangeEvent(CType(e.Row,MOV_s_FacturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_FacturaRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaRowDeleting(Me, New MOV_s_FacturaRowChangeEvent(CType(e.Row,MOV_s_FacturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_FacturaRow(ByVal row As MOV_s_FacturaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_FacturaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_FacturaDetalleDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_FacturaDetalleRow)
        
        Private columnP_inCodDetFac As Global.System.Data.DataColumn
        
        Private columnF_inCodCon As Global.System.Data.DataColumn
        
        Private columnvcDes As Global.System.Data.DataColumn
        
        Private columnvcObs As Global.System.Data.DataColumn
        
        Private columndcMon As Global.System.Data.DataColumn
        
        Private columnF_inEst As Global.System.Data.DataColumn
        
        Private columnvcNomEst As Global.System.Data.DataColumn
        
        Private columninNumIte As Global.System.Data.DataColumn
        
        Private columndcCan As Global.System.Data.DataColumn
        
        Private columndcPreUni As Global.System.Data.DataColumn
        
        Private columnF_inCodFac As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_FacturaDetalle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P_inCodDetFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_inCodDetFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inCodConColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inCodCon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcDesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcDes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcObsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcObs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcMonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcMon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inNumIteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninNumIte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcCanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcCan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcPreUniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcPreUni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inCodFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inCodFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_FacturaDetalleRow
            Get
                Return CType(Me.Rows(index),MOV_s_FacturaDetalleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaDetalleRowChanging As MOV_s_FacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaDetalleRowChanged As MOV_s_FacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaDetalleRowDeleting As MOV_s_FacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaDetalleRowDeleted As MOV_s_FacturaDetalleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_FacturaDetalleRow(ByVal row As MOV_s_FacturaDetalleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_FacturaDetalleRow(ByVal P_inCodDetFac As Integer, ByVal F_inCodCon As Integer, ByVal vcDes As String, ByVal vcObs As String, ByVal dcMon As Decimal, ByVal F_inEst As Integer, ByVal vcNomEst As String, ByVal inNumIte As Integer, ByVal dcCan As Decimal, ByVal dcPreUni As Decimal, ByVal F_inCodFac As Integer) As MOV_s_FacturaDetalleRow
            Dim rowMOV_s_FacturaDetalleRow As MOV_s_FacturaDetalleRow = CType(Me.NewRow,MOV_s_FacturaDetalleRow)
            Dim columnValuesArray() As Object = New Object() {P_inCodDetFac, F_inCodCon, vcDes, vcObs, dcMon, F_inEst, vcNomEst, inNumIte, dcCan, dcPreUni, F_inCodFac}
            rowMOV_s_FacturaDetalleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_FacturaDetalleRow)
            Return rowMOV_s_FacturaDetalleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_FacturaDetalleDataTable = CType(MyBase.Clone,MOV_s_FacturaDetalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_FacturaDetalleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnP_inCodDetFac = MyBase.Columns("P_inCodDetFac")
            Me.columnF_inCodCon = MyBase.Columns("F_inCodCon")
            Me.columnvcDes = MyBase.Columns("vcDes")
            Me.columnvcObs = MyBase.Columns("vcObs")
            Me.columndcMon = MyBase.Columns("dcMon")
            Me.columnF_inEst = MyBase.Columns("F_inEst")
            Me.columnvcNomEst = MyBase.Columns("vcNomEst")
            Me.columninNumIte = MyBase.Columns("inNumIte")
            Me.columndcCan = MyBase.Columns("dcCan")
            Me.columndcPreUni = MyBase.Columns("dcPreUni")
            Me.columnF_inCodFac = MyBase.Columns("F_inCodFac")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnP_inCodDetFac = New Global.System.Data.DataColumn("P_inCodDetFac", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_inCodDetFac)
            Me.columnF_inCodCon = New Global.System.Data.DataColumn("F_inCodCon", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inCodCon)
            Me.columnvcDes = New Global.System.Data.DataColumn("vcDes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcDes)
            Me.columnvcObs = New Global.System.Data.DataColumn("vcObs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcObs)
            Me.columndcMon = New Global.System.Data.DataColumn("dcMon", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcMon)
            Me.columnF_inEst = New Global.System.Data.DataColumn("F_inEst", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inEst)
            Me.columnvcNomEst = New Global.System.Data.DataColumn("vcNomEst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEst)
            Me.columninNumIte = New Global.System.Data.DataColumn("inNumIte", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninNumIte)
            Me.columndcCan = New Global.System.Data.DataColumn("dcCan", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcCan)
            Me.columndcPreUni = New Global.System.Data.DataColumn("dcPreUni", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcPreUni)
            Me.columnF_inCodFac = New Global.System.Data.DataColumn("F_inCodFac", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inCodFac)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_FacturaDetalleRow() As MOV_s_FacturaDetalleRow
            Return CType(Me.NewRow,MOV_s_FacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_FacturaDetalleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_FacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_FacturaDetalleRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaDetalleRowChanged(Me, New MOV_s_FacturaDetalleRowChangeEvent(CType(e.Row,MOV_s_FacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_FacturaDetalleRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaDetalleRowChanging(Me, New MOV_s_FacturaDetalleRowChangeEvent(CType(e.Row,MOV_s_FacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_FacturaDetalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaDetalleRowDeleted(Me, New MOV_s_FacturaDetalleRowChangeEvent(CType(e.Row,MOV_s_FacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_FacturaDetalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaDetalleRowDeleting(Me, New MOV_s_FacturaDetalleRowChangeEvent(CType(e.Row,MOV_s_FacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_FacturaDetalleRow(ByVal row As MOV_s_FacturaDetalleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_FacturaDetalleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_FacturaEmpleadoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_FacturaEmpleadoRow)
        
        Private columninCodFac As Global.System.Data.DataColumn
        
        Private columnvcCodEmp As Global.System.Data.DataColumn
        
        Private columnvcNomEmp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_FacturaEmpleado"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inCodFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninCodFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcCodEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcCodEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_FacturaEmpleadoRow
            Get
                Return CType(Me.Rows(index),MOV_s_FacturaEmpleadoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaEmpleadoRowChanging As MOV_s_FacturaEmpleadoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaEmpleadoRowChanged As MOV_s_FacturaEmpleadoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaEmpleadoRowDeleting As MOV_s_FacturaEmpleadoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaEmpleadoRowDeleted As MOV_s_FacturaEmpleadoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_FacturaEmpleadoRow(ByVal row As MOV_s_FacturaEmpleadoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_FacturaEmpleadoRow(ByVal inCodFac As Integer, ByVal vcCodEmp As String, ByVal vcNomEmp As String) As MOV_s_FacturaEmpleadoRow
            Dim rowMOV_s_FacturaEmpleadoRow As MOV_s_FacturaEmpleadoRow = CType(Me.NewRow,MOV_s_FacturaEmpleadoRow)
            Dim columnValuesArray() As Object = New Object() {inCodFac, vcCodEmp, vcNomEmp}
            rowMOV_s_FacturaEmpleadoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_FacturaEmpleadoRow)
            Return rowMOV_s_FacturaEmpleadoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_FacturaEmpleadoDataTable = CType(MyBase.Clone,MOV_s_FacturaEmpleadoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_FacturaEmpleadoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columninCodFac = MyBase.Columns("inCodFac")
            Me.columnvcCodEmp = MyBase.Columns("vcCodEmp")
            Me.columnvcNomEmp = MyBase.Columns("vcNomEmp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columninCodFac = New Global.System.Data.DataColumn("inCodFac", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninCodFac)
            Me.columnvcCodEmp = New Global.System.Data.DataColumn("vcCodEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcCodEmp)
            Me.columnvcNomEmp = New Global.System.Data.DataColumn("vcNomEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEmp)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_FacturaEmpleadoRow() As MOV_s_FacturaEmpleadoRow
            Return CType(Me.NewRow,MOV_s_FacturaEmpleadoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_FacturaEmpleadoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_FacturaEmpleadoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_FacturaEmpleadoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaEmpleadoRowChanged(Me, New MOV_s_FacturaEmpleadoRowChangeEvent(CType(e.Row,MOV_s_FacturaEmpleadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_FacturaEmpleadoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaEmpleadoRowChanging(Me, New MOV_s_FacturaEmpleadoRowChangeEvent(CType(e.Row,MOV_s_FacturaEmpleadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_FacturaEmpleadoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaEmpleadoRowDeleted(Me, New MOV_s_FacturaEmpleadoRowChangeEvent(CType(e.Row,MOV_s_FacturaEmpleadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_FacturaEmpleadoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaEmpleadoRowDeleting(Me, New MOV_s_FacturaEmpleadoRowChangeEvent(CType(e.Row,MOV_s_FacturaEmpleadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_FacturaEmpleadoRow(ByVal row As MOV_s_FacturaEmpleadoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_FacturaEmpleadoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_FacturaHistoricoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_FacturaHistoricoRow)
        
        Private columnvcCodFac As Global.System.Data.DataColumn
        
        Private columnvcFecFac As Global.System.Data.DataColumn
        
        Private columndcMonTot As Global.System.Data.DataColumn
        
        Private columndcImp As Global.System.Data.DataColumn
        
        Private columninCodOpe As Global.System.Data.DataColumn
        
        Private columnvcNomOpe As Global.System.Data.DataColumn
        
        Private columninCodEst As Global.System.Data.DataColumn
        
        Private columnvcNomEst As Global.System.Data.DataColumn
        
        Private columndtFecGenFac As Global.System.Data.DataColumn
        
        Private columndcSubTot As Global.System.Data.DataColumn
        
        Private columndcTipCam As Global.System.Data.DataColumn
        
        Private columninCodMon As Global.System.Data.DataColumn
        
        Private columnvcNomMon As Global.System.Data.DataColumn
        
        Private columndcIGV As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_FacturaHistorico"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcCodFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcCodFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcFecFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcFecFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcMonTotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcMonTot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcImpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcImp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inCodOpeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninCodOpe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomOpeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomOpe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inCodEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninCodEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtFecGenFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtFecGenFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcSubTotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcSubTot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcTipCamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcTipCam
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inCodMonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninCodMon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomMonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomMon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcIGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcIGV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_FacturaHistoricoRow
            Get
                Return CType(Me.Rows(index),MOV_s_FacturaHistoricoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaHistoricoRowChanging As MOV_s_FacturaHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaHistoricoRowChanged As MOV_s_FacturaHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaHistoricoRowDeleting As MOV_s_FacturaHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_FacturaHistoricoRowDeleted As MOV_s_FacturaHistoricoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_FacturaHistoricoRow(ByVal row As MOV_s_FacturaHistoricoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_FacturaHistoricoRow(ByVal vcCodFac As String, ByVal vcFecFac As String, ByVal dcMonTot As Decimal, ByVal dcImp As Decimal, ByVal inCodOpe As Integer, ByVal vcNomOpe As String, ByVal inCodEst As Integer, ByVal vcNomEst As String, ByVal dtFecGenFac As Date, ByVal dcSubTot As Decimal, ByVal dcTipCam As Decimal, ByVal inCodMon As Integer, ByVal vcNomMon As String, ByVal dcIGV As Decimal) As MOV_s_FacturaHistoricoRow
            Dim rowMOV_s_FacturaHistoricoRow As MOV_s_FacturaHistoricoRow = CType(Me.NewRow,MOV_s_FacturaHistoricoRow)
            Dim columnValuesArray() As Object = New Object() {vcCodFac, vcFecFac, dcMonTot, dcImp, inCodOpe, vcNomOpe, inCodEst, vcNomEst, dtFecGenFac, dcSubTot, dcTipCam, inCodMon, vcNomMon, dcIGV}
            rowMOV_s_FacturaHistoricoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_FacturaHistoricoRow)
            Return rowMOV_s_FacturaHistoricoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_FacturaHistoricoDataTable = CType(MyBase.Clone,MOV_s_FacturaHistoricoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_FacturaHistoricoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnvcCodFac = MyBase.Columns("vcCodFac")
            Me.columnvcFecFac = MyBase.Columns("vcFecFac")
            Me.columndcMonTot = MyBase.Columns("dcMonTot")
            Me.columndcImp = MyBase.Columns("dcImp")
            Me.columninCodOpe = MyBase.Columns("inCodOpe")
            Me.columnvcNomOpe = MyBase.Columns("vcNomOpe")
            Me.columninCodEst = MyBase.Columns("inCodEst")
            Me.columnvcNomEst = MyBase.Columns("vcNomEst")
            Me.columndtFecGenFac = MyBase.Columns("dtFecGenFac")
            Me.columndcSubTot = MyBase.Columns("dcSubTot")
            Me.columndcTipCam = MyBase.Columns("dcTipCam")
            Me.columninCodMon = MyBase.Columns("inCodMon")
            Me.columnvcNomMon = MyBase.Columns("vcNomMon")
            Me.columndcIGV = MyBase.Columns("dcIGV")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnvcCodFac = New Global.System.Data.DataColumn("vcCodFac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcCodFac)
            Me.columnvcFecFac = New Global.System.Data.DataColumn("vcFecFac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcFecFac)
            Me.columndcMonTot = New Global.System.Data.DataColumn("dcMonTot", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcMonTot)
            Me.columndcImp = New Global.System.Data.DataColumn("dcImp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcImp)
            Me.columninCodOpe = New Global.System.Data.DataColumn("inCodOpe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninCodOpe)
            Me.columnvcNomOpe = New Global.System.Data.DataColumn("vcNomOpe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomOpe)
            Me.columninCodEst = New Global.System.Data.DataColumn("inCodEst", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninCodEst)
            Me.columnvcNomEst = New Global.System.Data.DataColumn("vcNomEst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEst)
            Me.columndtFecGenFac = New Global.System.Data.DataColumn("dtFecGenFac", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtFecGenFac)
            Me.columndcSubTot = New Global.System.Data.DataColumn("dcSubTot", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcSubTot)
            Me.columndcTipCam = New Global.System.Data.DataColumn("dcTipCam", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcTipCam)
            Me.columninCodMon = New Global.System.Data.DataColumn("inCodMon", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninCodMon)
            Me.columnvcNomMon = New Global.System.Data.DataColumn("vcNomMon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomMon)
            Me.columndcIGV = New Global.System.Data.DataColumn("dcIGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcIGV)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_FacturaHistoricoRow() As MOV_s_FacturaHistoricoRow
            Return CType(Me.NewRow,MOV_s_FacturaHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_FacturaHistoricoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_FacturaHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_FacturaHistoricoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaHistoricoRowChanged(Me, New MOV_s_FacturaHistoricoRowChangeEvent(CType(e.Row,MOV_s_FacturaHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_FacturaHistoricoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaHistoricoRowChanging(Me, New MOV_s_FacturaHistoricoRowChangeEvent(CType(e.Row,MOV_s_FacturaHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_FacturaHistoricoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaHistoricoRowDeleted(Me, New MOV_s_FacturaHistoricoRowChangeEvent(CType(e.Row,MOV_s_FacturaHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_FacturaHistoricoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_FacturaHistoricoRowDeleting(Me, New MOV_s_FacturaHistoricoRowChangeEvent(CType(e.Row,MOV_s_FacturaHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_FacturaHistoricoRow(ByVal row As MOV_s_FacturaHistoricoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_FacturaHistoricoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_PagoHistoricoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_PagoHistoricoRow)
        
        Private columnvcCodPag As Global.System.Data.DataColumn
        
        Private columnvcPerIni As Global.System.Data.DataColumn
        
        Private columnvcPerFin As Global.System.Data.DataColumn
        
        Private columninCodOpe As Global.System.Data.DataColumn
        
        Private columnvcNomOpe As Global.System.Data.DataColumn
        
        Private columninCodEst As Global.System.Data.DataColumn
        
        Private columnvcNomEst As Global.System.Data.DataColumn
        
        Private columndcTotPag As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_PagoHistorico"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcCodPagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcCodPag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcPerIniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcPerIni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcPerFinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcPerFin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inCodOpeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninCodOpe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomOpeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomOpe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inCodEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninCodEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dcTotPagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndcTotPag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_PagoHistoricoRow
            Get
                Return CType(Me.Rows(index),MOV_s_PagoHistoricoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_PagoHistoricoRowChanging As MOV_s_PagoHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_PagoHistoricoRowChanged As MOV_s_PagoHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_PagoHistoricoRowDeleting As MOV_s_PagoHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_PagoHistoricoRowDeleted As MOV_s_PagoHistoricoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_PagoHistoricoRow(ByVal row As MOV_s_PagoHistoricoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_PagoHistoricoRow(ByVal vcCodPag As String, ByVal vcPerIni As String, ByVal vcPerFin As String, ByVal inCodOpe As Integer, ByVal vcNomOpe As String, ByVal inCodEst As Integer, ByVal vcNomEst As String, ByVal dcTotPag As Decimal) As MOV_s_PagoHistoricoRow
            Dim rowMOV_s_PagoHistoricoRow As MOV_s_PagoHistoricoRow = CType(Me.NewRow,MOV_s_PagoHistoricoRow)
            Dim columnValuesArray() As Object = New Object() {vcCodPag, vcPerIni, vcPerFin, inCodOpe, vcNomOpe, inCodEst, vcNomEst, dcTotPag}
            rowMOV_s_PagoHistoricoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_PagoHistoricoRow)
            Return rowMOV_s_PagoHistoricoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_PagoHistoricoDataTable = CType(MyBase.Clone,MOV_s_PagoHistoricoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_PagoHistoricoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnvcCodPag = MyBase.Columns("vcCodPag")
            Me.columnvcPerIni = MyBase.Columns("vcPerIni")
            Me.columnvcPerFin = MyBase.Columns("vcPerFin")
            Me.columninCodOpe = MyBase.Columns("inCodOpe")
            Me.columnvcNomOpe = MyBase.Columns("vcNomOpe")
            Me.columninCodEst = MyBase.Columns("inCodEst")
            Me.columnvcNomEst = MyBase.Columns("vcNomEst")
            Me.columndcTotPag = MyBase.Columns("dcTotPag")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnvcCodPag = New Global.System.Data.DataColumn("vcCodPag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcCodPag)
            Me.columnvcPerIni = New Global.System.Data.DataColumn("vcPerIni", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcPerIni)
            Me.columnvcPerFin = New Global.System.Data.DataColumn("vcPerFin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcPerFin)
            Me.columninCodOpe = New Global.System.Data.DataColumn("inCodOpe", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninCodOpe)
            Me.columnvcNomOpe = New Global.System.Data.DataColumn("vcNomOpe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomOpe)
            Me.columninCodEst = New Global.System.Data.DataColumn("inCodEst", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninCodEst)
            Me.columnvcNomEst = New Global.System.Data.DataColumn("vcNomEst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEst)
            Me.columndcTotPag = New Global.System.Data.DataColumn("dcTotPag", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndcTotPag)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_PagoHistoricoRow() As MOV_s_PagoHistoricoRow
            Return CType(Me.NewRow,MOV_s_PagoHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_PagoHistoricoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_PagoHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_PagoHistoricoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_PagoHistoricoRowChanged(Me, New MOV_s_PagoHistoricoRowChangeEvent(CType(e.Row,MOV_s_PagoHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_PagoHistoricoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_PagoHistoricoRowChanging(Me, New MOV_s_PagoHistoricoRowChangeEvent(CType(e.Row,MOV_s_PagoHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_PagoHistoricoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_PagoHistoricoRowDeleted(Me, New MOV_s_PagoHistoricoRowChangeEvent(CType(e.Row,MOV_s_PagoHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_PagoHistoricoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_PagoHistoricoRowDeleting(Me, New MOV_s_PagoHistoricoRowChangeEvent(CType(e.Row,MOV_s_PagoHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_PagoHistoricoRow(ByVal row As MOV_s_PagoHistoricoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_PagoHistoricoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_s_SolicitudHistoricoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_s_SolicitudHistoricoRow)
        
        Private columnP_inCodSol As Global.System.Data.DataColumn
        
        Private columnF_vcNumLin As Global.System.Data.DataColumn
        
        Private columnF_vcCodIMEI As Global.System.Data.DataColumn
        
        Private columnF_vcCodEmp As Global.System.Data.DataColumn
        
        Private columnvcNomEmp As Global.System.Data.DataColumn
        
        Private columnF_inCodModDis As Global.System.Data.DataColumn
        
        Private columnvcNomModDis As Global.System.Data.DataColumn
        
        Private columnF_inEstSol As Global.System.Data.DataColumn
        
        Private columnvcNomEst As Global.System.Data.DataColumn
        
        Private columndtFecSol As Global.System.Data.DataColumn
        
        Private columnbtPen As Global.System.Data.DataColumn
        
        Private columninTipSol As Global.System.Data.DataColumn
        
        Private columnvcNomTipSol As Global.System.Data.DataColumn
        
        Private columnF_vcCodDis As Global.System.Data.DataColumn
        
        Private columnvcDesSol As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOV_s_SolicitudHistorico"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P_inCodSolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_inCodSol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcNumLinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcNumLin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcCodIMEIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcCodIMEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcCodEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcCodEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inCodModDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inCodModDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomModDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomModDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_inEstSolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_inEstSol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomEstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomEst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dtFecSolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndtFecSol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property btPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbtPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property inTipSolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninTipSol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcNomTipSolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcNomTipSol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_vcCodDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_vcCodDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vcDesSolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcDesSol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOV_s_SolicitudHistoricoRow
            Get
                Return CType(Me.Rows(index),MOV_s_SolicitudHistoricoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudHistoricoRowChanging As MOV_s_SolicitudHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudHistoricoRowChanged As MOV_s_SolicitudHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudHistoricoRowDeleting As MOV_s_SolicitudHistoricoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOV_s_SolicitudHistoricoRowDeleted As MOV_s_SolicitudHistoricoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOV_s_SolicitudHistoricoRow(ByVal row As MOV_s_SolicitudHistoricoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOV_s_SolicitudHistoricoRow(ByVal F_vcNumLin As String, ByVal F_vcCodIMEI As String, ByVal F_vcCodEmp As String, ByVal vcNomEmp As String, ByVal F_inCodModDis As Integer, ByVal vcNomModDis As String, ByVal F_inEstSol As Integer, ByVal vcNomEst As String, ByVal dtFecSol As Date, ByVal btPen As Boolean, ByVal inTipSol As Integer, ByVal vcNomTipSol As String, ByVal F_vcCodDis As String, ByVal vcDesSol As String) As MOV_s_SolicitudHistoricoRow
            Dim rowMOV_s_SolicitudHistoricoRow As MOV_s_SolicitudHistoricoRow = CType(Me.NewRow,MOV_s_SolicitudHistoricoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, F_vcNumLin, F_vcCodIMEI, F_vcCodEmp, vcNomEmp, F_inCodModDis, vcNomModDis, F_inEstSol, vcNomEst, dtFecSol, btPen, inTipSol, vcNomTipSol, F_vcCodDis, vcDesSol}
            rowMOV_s_SolicitudHistoricoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_s_SolicitudHistoricoRow)
            Return rowMOV_s_SolicitudHistoricoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByP_inCodSol(ByVal P_inCodSol As Integer) As MOV_s_SolicitudHistoricoRow
            Return CType(Me.Rows.Find(New Object() {P_inCodSol}),MOV_s_SolicitudHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_s_SolicitudHistoricoDataTable = CType(MyBase.Clone,MOV_s_SolicitudHistoricoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_s_SolicitudHistoricoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnP_inCodSol = MyBase.Columns("P_inCodSol")
            Me.columnF_vcNumLin = MyBase.Columns("F_vcNumLin")
            Me.columnF_vcCodIMEI = MyBase.Columns("F_vcCodIMEI")
            Me.columnF_vcCodEmp = MyBase.Columns("F_vcCodEmp")
            Me.columnvcNomEmp = MyBase.Columns("vcNomEmp")
            Me.columnF_inCodModDis = MyBase.Columns("F_inCodModDis")
            Me.columnvcNomModDis = MyBase.Columns("vcNomModDis")
            Me.columnF_inEstSol = MyBase.Columns("F_inEstSol")
            Me.columnvcNomEst = MyBase.Columns("vcNomEst")
            Me.columndtFecSol = MyBase.Columns("dtFecSol")
            Me.columnbtPen = MyBase.Columns("btPen")
            Me.columninTipSol = MyBase.Columns("inTipSol")
            Me.columnvcNomTipSol = MyBase.Columns("vcNomTipSol")
            Me.columnF_vcCodDis = MyBase.Columns("F_vcCodDis")
            Me.columnvcDesSol = MyBase.Columns("vcDesSol")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnP_inCodSol = New Global.System.Data.DataColumn("P_inCodSol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_inCodSol)
            Me.columnF_vcNumLin = New Global.System.Data.DataColumn("F_vcNumLin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcNumLin)
            Me.columnF_vcCodIMEI = New Global.System.Data.DataColumn("F_vcCodIMEI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcCodIMEI)
            Me.columnF_vcCodEmp = New Global.System.Data.DataColumn("F_vcCodEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcCodEmp)
            Me.columnvcNomEmp = New Global.System.Data.DataColumn("vcNomEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEmp)
            Me.columnF_inCodModDis = New Global.System.Data.DataColumn("F_inCodModDis", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inCodModDis)
            Me.columnvcNomModDis = New Global.System.Data.DataColumn("vcNomModDis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomModDis)
            Me.columnF_inEstSol = New Global.System.Data.DataColumn("F_inEstSol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_inEstSol)
            Me.columnvcNomEst = New Global.System.Data.DataColumn("vcNomEst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomEst)
            Me.columndtFecSol = New Global.System.Data.DataColumn("dtFecSol", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndtFecSol)
            Me.columnbtPen = New Global.System.Data.DataColumn("btPen", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbtPen)
            Me.columninTipSol = New Global.System.Data.DataColumn("inTipSol", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninTipSol)
            Me.columnvcNomTipSol = New Global.System.Data.DataColumn("vcNomTipSol", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcNomTipSol)
            Me.columnF_vcCodDis = New Global.System.Data.DataColumn("F_vcCodDis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_vcCodDis)
            Me.columnvcDesSol = New Global.System.Data.DataColumn("vcDesSol", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcDesSol)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnP_inCodSol}, true))
            Me.columnP_inCodSol.AutoIncrement = true
            Me.columnP_inCodSol.AllowDBNull = false
            Me.columnP_inCodSol.ReadOnly = true
            Me.columnP_inCodSol.Unique = true
            Me.columnF_vcNumLin.MaxLength = 15
            Me.columnF_vcCodIMEI.MaxLength = 50
            Me.columnF_vcCodEmp.MaxLength = 15
            Me.columnvcNomEmp.AllowDBNull = false
            Me.columnvcNomEmp.MaxLength = 35
            Me.columnvcNomModDis.MaxLength = 100
            Me.columnvcNomEst.MaxLength = 50
            Me.columnvcNomTipSol.AllowDBNull = false
            Me.columnvcNomTipSol.MaxLength = 10
            Me.columnF_vcCodDis.MaxLength = 50
            Me.columnvcDesSol.AllowDBNull = false
            Me.columnvcDesSol.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOV_s_SolicitudHistoricoRow() As MOV_s_SolicitudHistoricoRow
            Return CType(Me.NewRow,MOV_s_SolicitudHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_s_SolicitudHistoricoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_s_SolicitudHistoricoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_s_SolicitudHistoricoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudHistoricoRowChanged(Me, New MOV_s_SolicitudHistoricoRowChangeEvent(CType(e.Row,MOV_s_SolicitudHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_s_SolicitudHistoricoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudHistoricoRowChanging(Me, New MOV_s_SolicitudHistoricoRowChangeEvent(CType(e.Row,MOV_s_SolicitudHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_s_SolicitudHistoricoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudHistoricoRowDeleted(Me, New MOV_s_SolicitudHistoricoRowChangeEvent(CType(e.Row,MOV_s_SolicitudHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_s_SolicitudHistoricoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_s_SolicitudHistoricoRowDeleting(Me, New MOV_s_SolicitudHistoricoRowChangeEvent(CType(e.Row,MOV_s_SolicitudHistoricoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOV_s_SolicitudHistoricoRow(ByVal row As MOV_s_SolicitudHistoricoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ds_P_Movil_Adm = New ds_P_Movil_Adm()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_s_SolicitudHistoricoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_SolicitudesDespachoReporteRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_SolicitudesDespachoReporte As MOV_s_SolicitudesDespachoReporteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_SolicitudesDespachoReporte = CType(Me.Table,MOV_s_SolicitudesDespachoReporteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtFecRec() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.dtFecRecColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtFecRec' in table 'MOV_s_SolicitudesDespachoReporte' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.dtFecRecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcObs() As String
            Get
                Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcObsColumn),String)
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcObsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcCodIMEI() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodIMEIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcCodIMEI' in table 'MOV_s_SolicitudesDespachoReporte' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodIMEIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomModDis() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomModDisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomModDis' in table 'MOV_s_SolicitudesDespachoReporte' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomModDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcNumLin() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcNumLinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcNumLin' in table 'MOV_s_SolicitudesDespachoReporte' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcNumLinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcCodEmp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodEmpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcCodEmp' in table 'MOV_s_SolicitudesDespachoReporte' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEmp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomEmpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEmp' in table 'MOV_s_SolicitudesDespachoReporte' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtFecRecNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudesDespachoReporte.dtFecRecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtFecRecNull()
            Me(Me.tableMOV_s_SolicitudesDespachoReporte.dtFecRecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcCodIMEINull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodIMEIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcCodIMEINull()
            Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodIMEIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomModDisNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomModDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomModDisNull()
            Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomModDisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcNumLinNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcNumLinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcNumLinNull()
            Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcNumLinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcCodEmpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcCodEmpNull()
            Me(Me.tableMOV_s_SolicitudesDespachoReporte.F_vcCodEmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEmpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEmpNull()
            Me(Me.tableMOV_s_SolicitudesDespachoReporte.vcNomEmpColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GEN_s_Cliente_PorCodigoRow
        Inherits Global.System.Data.DataRow
        
        Private tableGEN_s_Cliente_PorCodigo As GEN_s_Cliente_PorCodigoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGEN_s_Cliente_PorCodigo = CType(Me.Table,GEN_s_Cliente_PorCodigoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P_inCodCli() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.P_inCodCliColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_inCodCli' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.P_inCodCliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomCli() As String
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.vcNomCliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomCli' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.vcNomCliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inCodMon() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.F_inCodMonColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inCodMon' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.F_inCodMonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcRUC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.vcRUCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcRUC' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.vcRUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcDireccion() As String
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.vcDireccionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcDireccion' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.vcDireccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vbLogCli() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.vbLogCliColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vbLogCli' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.vbLogCliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inEst() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGEN_s_Cliente_PorCodigo.inEstColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inEst' in table 'GEN_s_Cliente_PorCodigo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGEN_s_Cliente_PorCodigo.inEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP_inCodCliNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.P_inCodCliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP_inCodCliNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.P_inCodCliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomCliNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.vcNomCliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomCliNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.vcNomCliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inCodMonNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.F_inCodMonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inCodMonNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.F_inCodMonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcRUCNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.vcRUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcRUCNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.vcRUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcDireccionNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.vcDireccionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcDireccionNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.vcDireccionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvbLogCliNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.vbLogCliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvbLogCliNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.vbLogCliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinEstNull() As Boolean
            Return Me.IsNull(Me.tableGEN_s_Cliente_PorCodigo.inEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinEstNull()
            Me(Me.tableGEN_s_Cliente_PorCodigo.inEstColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_FacturaRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_Factura As MOV_s_FacturaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_Factura = CType(Me.Table,MOV_s_FacturaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P_inCodFac() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.P_inCodFacColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_inCodFac' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.P_inCodFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtFecFac() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dtFecFacColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtFecFac' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dtFecFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcMonTot() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dcMonTotColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcMonTot' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dcMonTotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcImp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dcImpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcImp' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dcImpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inCodOpe() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.F_inCodOpeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inCodOpe' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.F_inCodOpeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inEst() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.F_inEstColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inEst' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.F_inEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtFecGenFac() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dtFecGenFacColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtFecGenFac' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dtFecGenFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcSubTot() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dcSubTotColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcSubTot' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dcSubTotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcTipCam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dcTipCamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcTipCam' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dcTipCamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inCodMon() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.F_inCodMonColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inCodMon' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.F_inCodMonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcIGV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.dcIGVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcIGV' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.dcIGVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomOpe() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.vcNomOpeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomOpe' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.vcNomOpeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEst() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.vcNomEstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEst' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.vcNomEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcCodFac() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_Factura.vcCodFacColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcCodFac' in table 'MOV_s_Factura' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_Factura.vcCodFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP_inCodFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.P_inCodFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP_inCodFacNull()
            Me(Me.tableMOV_s_Factura.P_inCodFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtFecFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dtFecFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtFecFacNull()
            Me(Me.tableMOV_s_Factura.dtFecFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcMonTotNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dcMonTotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcMonTotNull()
            Me(Me.tableMOV_s_Factura.dcMonTotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcImpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dcImpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcImpNull()
            Me(Me.tableMOV_s_Factura.dcImpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inCodOpeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.F_inCodOpeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inCodOpeNull()
            Me(Me.tableMOV_s_Factura.F_inCodOpeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.F_inEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inEstNull()
            Me(Me.tableMOV_s_Factura.F_inEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtFecGenFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dtFecGenFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtFecGenFacNull()
            Me(Me.tableMOV_s_Factura.dtFecGenFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcSubTotNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dcSubTotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcSubTotNull()
            Me(Me.tableMOV_s_Factura.dcSubTotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcTipCamNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dcTipCamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcTipCamNull()
            Me(Me.tableMOV_s_Factura.dcTipCamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inCodMonNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.F_inCodMonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inCodMonNull()
            Me(Me.tableMOV_s_Factura.F_inCodMonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcIGVNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.dcIGVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcIGVNull()
            Me(Me.tableMOV_s_Factura.dcIGVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomOpeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.vcNomOpeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomOpeNull()
            Me(Me.tableMOV_s_Factura.vcNomOpeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.vcNomEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEstNull()
            Me(Me.tableMOV_s_Factura.vcNomEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcCodFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_Factura.vcCodFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcCodFacNull()
            Me(Me.tableMOV_s_Factura.vcCodFacColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_FacturaDetalleRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_FacturaDetalle As MOV_s_FacturaDetalleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_FacturaDetalle = CType(Me.Table,MOV_s_FacturaDetalleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P_inCodDetFac() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.P_inCodDetFacColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_inCodDetFac' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.P_inCodDetFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inCodCon() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.F_inCodConColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inCodCon' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.F_inCodConColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcDes() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.vcDesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcDes' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.vcDesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcObs() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.vcObsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcObs' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.vcObsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcMon() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.dcMonColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcMon' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.dcMonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inEst() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.F_inEstColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inEst' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.F_inEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEst() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.vcNomEstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEst' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.vcNomEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inNumIte() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.inNumIteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inNumIte' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.inNumIteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcCan() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.dcCanColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcCan' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.dcCanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcPreUni() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.dcPreUniColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcPreUni' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.dcPreUniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inCodFac() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaDetalle.F_inCodFacColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inCodFac' in table 'MOV_s_FacturaDetalle' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaDetalle.F_inCodFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP_inCodDetFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.P_inCodDetFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP_inCodDetFacNull()
            Me(Me.tableMOV_s_FacturaDetalle.P_inCodDetFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inCodConNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.F_inCodConColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inCodConNull()
            Me(Me.tableMOV_s_FacturaDetalle.F_inCodConColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcDesNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.vcDesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcDesNull()
            Me(Me.tableMOV_s_FacturaDetalle.vcDesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcObsNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.vcObsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcObsNull()
            Me(Me.tableMOV_s_FacturaDetalle.vcObsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcMonNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.dcMonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcMonNull()
            Me(Me.tableMOV_s_FacturaDetalle.dcMonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.F_inEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inEstNull()
            Me(Me.tableMOV_s_FacturaDetalle.F_inEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.vcNomEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEstNull()
            Me(Me.tableMOV_s_FacturaDetalle.vcNomEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinNumIteNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.inNumIteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinNumIteNull()
            Me(Me.tableMOV_s_FacturaDetalle.inNumIteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcCanNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.dcCanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcCanNull()
            Me(Me.tableMOV_s_FacturaDetalle.dcCanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcPreUniNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.dcPreUniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcPreUniNull()
            Me(Me.tableMOV_s_FacturaDetalle.dcPreUniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inCodFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaDetalle.F_inCodFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inCodFacNull()
            Me(Me.tableMOV_s_FacturaDetalle.F_inCodFacColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_FacturaEmpleadoRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_FacturaEmpleado As MOV_s_FacturaEmpleadoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_FacturaEmpleado = CType(Me.Table,MOV_s_FacturaEmpleadoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inCodFac() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaEmpleado.inCodFacColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inCodFac' in table 'MOV_s_FacturaEmpleado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaEmpleado.inCodFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcCodEmp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaEmpleado.vcCodEmpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcCodEmp' in table 'MOV_s_FacturaEmpleado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaEmpleado.vcCodEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEmp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaEmpleado.vcNomEmpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEmp' in table 'MOV_s_FacturaEmpleado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaEmpleado.vcNomEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinCodFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaEmpleado.inCodFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinCodFacNull()
            Me(Me.tableMOV_s_FacturaEmpleado.inCodFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcCodEmpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaEmpleado.vcCodEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcCodEmpNull()
            Me(Me.tableMOV_s_FacturaEmpleado.vcCodEmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEmpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaEmpleado.vcNomEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEmpNull()
            Me(Me.tableMOV_s_FacturaEmpleado.vcNomEmpColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_FacturaHistoricoRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_FacturaHistorico As MOV_s_FacturaHistoricoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_FacturaHistorico = CType(Me.Table,MOV_s_FacturaHistoricoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcCodFac() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.vcCodFacColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcCodFac' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.vcCodFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcFecFac() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.vcFecFacColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcFecFac' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.vcFecFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcMonTot() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.dcMonTotColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcMonTot' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.dcMonTotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcImp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.dcImpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcImp' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.dcImpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inCodOpe() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.inCodOpeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inCodOpe' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.inCodOpeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomOpe() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.vcNomOpeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomOpe' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.vcNomOpeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inCodEst() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.inCodEstColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inCodEst' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.inCodEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEst() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.vcNomEstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEst' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.vcNomEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtFecGenFac() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.dtFecGenFacColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtFecGenFac' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.dtFecGenFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcSubTot() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.dcSubTotColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcSubTot' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.dcSubTotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcTipCam() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.dcTipCamColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcTipCam' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.dcTipCamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inCodMon() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.inCodMonColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inCodMon' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.inCodMonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomMon() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.vcNomMonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomMon' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.vcNomMonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcIGV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_FacturaHistorico.dcIGVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcIGV' in table 'MOV_s_FacturaHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_FacturaHistorico.dcIGVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcCodFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.vcCodFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcCodFacNull()
            Me(Me.tableMOV_s_FacturaHistorico.vcCodFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcFecFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.vcFecFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcFecFacNull()
            Me(Me.tableMOV_s_FacturaHistorico.vcFecFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcMonTotNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.dcMonTotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcMonTotNull()
            Me(Me.tableMOV_s_FacturaHistorico.dcMonTotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcImpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.dcImpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcImpNull()
            Me(Me.tableMOV_s_FacturaHistorico.dcImpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinCodOpeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.inCodOpeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinCodOpeNull()
            Me(Me.tableMOV_s_FacturaHistorico.inCodOpeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomOpeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.vcNomOpeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomOpeNull()
            Me(Me.tableMOV_s_FacturaHistorico.vcNomOpeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinCodEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.inCodEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinCodEstNull()
            Me(Me.tableMOV_s_FacturaHistorico.inCodEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.vcNomEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEstNull()
            Me(Me.tableMOV_s_FacturaHistorico.vcNomEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtFecGenFacNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.dtFecGenFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtFecGenFacNull()
            Me(Me.tableMOV_s_FacturaHistorico.dtFecGenFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcSubTotNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.dcSubTotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcSubTotNull()
            Me(Me.tableMOV_s_FacturaHistorico.dcSubTotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcTipCamNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.dcTipCamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcTipCamNull()
            Me(Me.tableMOV_s_FacturaHistorico.dcTipCamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinCodMonNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.inCodMonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinCodMonNull()
            Me(Me.tableMOV_s_FacturaHistorico.inCodMonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomMonNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.vcNomMonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomMonNull()
            Me(Me.tableMOV_s_FacturaHistorico.vcNomMonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcIGVNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_FacturaHistorico.dcIGVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcIGVNull()
            Me(Me.tableMOV_s_FacturaHistorico.dcIGVColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_PagoHistoricoRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_PagoHistorico As MOV_s_PagoHistoricoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_PagoHistorico = CType(Me.Table,MOV_s_PagoHistoricoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcCodPag() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.vcCodPagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcCodPag' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.vcCodPagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcPerIni() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.vcPerIniColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcPerIni' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.vcPerIniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcPerFin() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.vcPerFinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcPerFin' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.vcPerFinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inCodOpe() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.inCodOpeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inCodOpe' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.inCodOpeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomOpe() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.vcNomOpeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomOpe' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.vcNomOpeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inCodEst() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.inCodEstColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inCodEst' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.inCodEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEst() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.vcNomEstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEst' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.vcNomEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dcTotPag() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_PagoHistorico.dcTotPagColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dcTotPag' in table 'MOV_s_PagoHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_PagoHistorico.dcTotPagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcCodPagNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.vcCodPagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcCodPagNull()
            Me(Me.tableMOV_s_PagoHistorico.vcCodPagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcPerIniNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.vcPerIniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcPerIniNull()
            Me(Me.tableMOV_s_PagoHistorico.vcPerIniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcPerFinNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.vcPerFinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcPerFinNull()
            Me(Me.tableMOV_s_PagoHistorico.vcPerFinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinCodOpeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.inCodOpeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinCodOpeNull()
            Me(Me.tableMOV_s_PagoHistorico.inCodOpeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomOpeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.vcNomOpeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomOpeNull()
            Me(Me.tableMOV_s_PagoHistorico.vcNomOpeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinCodEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.inCodEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinCodEstNull()
            Me(Me.tableMOV_s_PagoHistorico.inCodEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.vcNomEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEstNull()
            Me(Me.tableMOV_s_PagoHistorico.vcNomEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdcTotPagNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_PagoHistorico.dcTotPagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdcTotPagNull()
            Me(Me.tableMOV_s_PagoHistorico.dcTotPagColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_s_SolicitudHistoricoRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOV_s_SolicitudHistorico As MOV_s_SolicitudHistoricoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_s_SolicitudHistorico = CType(Me.Table,MOV_s_SolicitudHistoricoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P_inCodSol() As Integer
            Get
                Return CType(Me(Me.tableMOV_s_SolicitudHistorico.P_inCodSolColumn),Integer)
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.P_inCodSolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcNumLin() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.F_vcNumLinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcNumLin' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.F_vcNumLinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcCodIMEI() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodIMEIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcCodIMEI' in table 'MOV_s_SolicitudHistorico' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodIMEIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcCodEmp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodEmpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcCodEmp' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEmp() As String
            Get
                Return CType(Me(Me.tableMOV_s_SolicitudHistorico.vcNomEmpColumn),String)
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.vcNomEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inCodModDis() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.F_inCodModDisColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inCodModDis' in table 'MOV_s_SolicitudHistorico' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.F_inCodModDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomModDis() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.vcNomModDisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomModDis' in table 'MOV_s_SolicitudHistorico' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.vcNomModDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_inEstSol() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.F_inEstSolColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_inEstSol' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.F_inEstSolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomEst() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.vcNomEstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vcNomEst' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.vcNomEstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dtFecSol() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.dtFecSolColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dtFecSol' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.dtFecSolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property btPen() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.btPenColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'btPen' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.btPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property inTipSol() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.inTipSolColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'inTipSol' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.inTipSolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcNomTipSol() As String
            Get
                Return CType(Me(Me.tableMOV_s_SolicitudHistorico.vcNomTipSolColumn),String)
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.vcNomTipSolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_vcCodDis() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodDisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_vcCodDis' in table 'MOV_s_SolicitudHistorico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property vcDesSol() As String
            Get
                Return CType(Me(Me.tableMOV_s_SolicitudHistorico.vcDesSolColumn),String)
            End Get
            Set
                Me(Me.tableMOV_s_SolicitudHistorico.vcDesSolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcNumLinNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.F_vcNumLinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcNumLinNull()
            Me(Me.tableMOV_s_SolicitudHistorico.F_vcNumLinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcCodIMEINull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.F_vcCodIMEIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcCodIMEINull()
            Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodIMEIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcCodEmpNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.F_vcCodEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcCodEmpNull()
            Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodEmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inCodModDisNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.F_inCodModDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inCodModDisNull()
            Me(Me.tableMOV_s_SolicitudHistorico.F_inCodModDisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomModDisNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.vcNomModDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomModDisNull()
            Me(Me.tableMOV_s_SolicitudHistorico.vcNomModDisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_inEstSolNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.F_inEstSolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_inEstSolNull()
            Me(Me.tableMOV_s_SolicitudHistorico.F_inEstSolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvcNomEstNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.vcNomEstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvcNomEstNull()
            Me(Me.tableMOV_s_SolicitudHistorico.vcNomEstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdtFecSolNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.dtFecSolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdtFecSolNull()
            Me(Me.tableMOV_s_SolicitudHistorico.dtFecSolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbtPenNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.btPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbtPenNull()
            Me(Me.tableMOV_s_SolicitudHistorico.btPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsinTipSolNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.inTipSolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetinTipSolNull()
            Me(Me.tableMOV_s_SolicitudHistorico.inTipSolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_vcCodDisNull() As Boolean
            Return Me.IsNull(Me.tableMOV_s_SolicitudHistorico.F_vcCodDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_vcCodDisNull()
            Me(Me.tableMOV_s_SolicitudHistorico.F_vcCodDisColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_SolicitudesDespachoReporteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_SolicitudesDespachoReporteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_SolicitudesDespachoReporteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_SolicitudesDespachoReporteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class GEN_s_Cliente_PorCodigoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GEN_s_Cliente_PorCodigoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As GEN_s_Cliente_PorCodigoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As GEN_s_Cliente_PorCodigoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_FacturaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_FacturaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_FacturaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_FacturaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_FacturaDetalleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_FacturaDetalleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_FacturaDetalleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_FacturaDetalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_FacturaEmpleadoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_FacturaEmpleadoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_FacturaEmpleadoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_FacturaEmpleadoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_FacturaHistoricoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_FacturaHistoricoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_FacturaHistoricoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_FacturaHistoricoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_PagoHistoricoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_PagoHistoricoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_PagoHistoricoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_PagoHistoricoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_s_SolicitudHistoricoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_s_SolicitudHistoricoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_s_SolicitudHistoricoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_s_SolicitudHistoricoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ds_P_Movil_AdmTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MOV_s_SolicitudesDespachoReporteTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MOV_s_SolicitudesDespachoReporte"
            tableMapping.ColumnMappings.Add("dtFecRec", "dtFecRec")
            tableMapping.ColumnMappings.Add("vcObs", "vcObs")
            tableMapping.ColumnMappings.Add("F_vcCodIMEI", "F_vcCodIMEI")
            tableMapping.ColumnMappings.Add("vcNomModDis", "vcNomModDis")
            tableMapping.ColumnMappings.Add("F_vcNumLin", "F_vcNumLin")
            tableMapping.ColumnMappings.Add("F_vcCodEmp", "F_vcCodEmp")
            tableMapping.ColumnMappings.Add("vcNomEmp", "vcNomEmp")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=130.1.7.21\sql2008;Initial Catalog=MOVILNET_DATOS_DEVELOP;Persist Sec"& _ 
                "urity Info=True;User ID=sa;Password=sasa"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.MOV_s_SolicitudesDespachoReporte"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_vcCodSolDet", Global.System.Data.SqlDbType.VarChar, 8000, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ds_P_Movil_Adm.MOV_s_SolicitudesDespachoReporteDataTable, ByVal p_vcCodSolDet As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (p_vcCodSolDet Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(p_vcCodSolDet,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal p_vcCodSolDet As String) As ds_P_Movil_Adm.MOV_s_SolicitudesDespachoReporteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (p_vcCodSolDet Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(p_vcCodSolDet,String)
            End If
            Dim dataTable As ds_P_Movil_Adm.MOV_s_SolicitudesDespachoReporteDataTable = New ds_P_Movil_Adm.MOV_s_SolicitudesDespachoReporteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
