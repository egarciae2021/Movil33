'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsReportesFacturacion"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsReportesFacturacion
    Inherits Global.System.Data.DataSet
    
    Private tableMOV_FAC_REP_LineasNoFacturadas As MOV_FAC_REP_LineasNoFacturadasDataTable
    
    Private tableMOV_FAC_REP_LineasFacturadasConExceso As MOV_FAC_REP_LineasFacturadasConExcesoDataTable
    
    Private tableMOV_FAC_REP_LineasSinConsumo As MOV_FAC_REP_LineasSinConsumoDataTable
    
    Private tableMOV_FAC_REP_LineasAgrupadasPorConcepto As MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable
    
    Private tableMOV_FAC_REP_LineasConsumoDatos As MOV_FAC_REP_LineasConsumoDatosDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MOV_FAC_REP_LineasNoFacturadas")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasNoFacturadasDataTable(ds.Tables("MOV_FAC_REP_LineasNoFacturadas")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasFacturadasConExceso")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasFacturadasConExcesoDataTable(ds.Tables("MOV_FAC_REP_LineasFacturadasConExceso")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasSinConsumo")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasSinConsumoDataTable(ds.Tables("MOV_FAC_REP_LineasSinConsumo")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasAgrupadasPorConcepto")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable(ds.Tables("MOV_FAC_REP_LineasAgrupadasPorConcepto")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasConsumoDatos")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasConsumoDatosDataTable(ds.Tables("MOV_FAC_REP_LineasConsumoDatos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_FAC_REP_LineasNoFacturadas() As MOV_FAC_REP_LineasNoFacturadasDataTable
        Get
            Return Me.tableMOV_FAC_REP_LineasNoFacturadas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_FAC_REP_LineasFacturadasConExceso() As MOV_FAC_REP_LineasFacturadasConExcesoDataTable
        Get
            Return Me.tableMOV_FAC_REP_LineasFacturadasConExceso
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_FAC_REP_LineasSinConsumo() As MOV_FAC_REP_LineasSinConsumoDataTable
        Get
            Return Me.tableMOV_FAC_REP_LineasSinConsumo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_FAC_REP_LineasAgrupadasPorConcepto() As MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable
        Get
            Return Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOV_FAC_REP_LineasConsumoDatos() As MOV_FAC_REP_LineasConsumoDatosDataTable
        Get
            Return Me.tableMOV_FAC_REP_LineasConsumoDatos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsReportesFacturacion = CType(MyBase.Clone,dsReportesFacturacion)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("MOV_FAC_REP_LineasNoFacturadas")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasNoFacturadasDataTable(ds.Tables("MOV_FAC_REP_LineasNoFacturadas")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasFacturadasConExceso")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasFacturadasConExcesoDataTable(ds.Tables("MOV_FAC_REP_LineasFacturadasConExceso")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasSinConsumo")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasSinConsumoDataTable(ds.Tables("MOV_FAC_REP_LineasSinConsumo")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasAgrupadasPorConcepto")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable(ds.Tables("MOV_FAC_REP_LineasAgrupadasPorConcepto")))
            End If
            If (Not (ds.Tables("MOV_FAC_REP_LineasConsumoDatos")) Is Nothing) Then
                MyBase.Tables.Add(New MOV_FAC_REP_LineasConsumoDatosDataTable(ds.Tables("MOV_FAC_REP_LineasConsumoDatos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMOV_FAC_REP_LineasNoFacturadas = CType(MyBase.Tables("MOV_FAC_REP_LineasNoFacturadas"),MOV_FAC_REP_LineasNoFacturadasDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_FAC_REP_LineasNoFacturadas) Is Nothing) Then
                Me.tableMOV_FAC_REP_LineasNoFacturadas.InitVars
            End If
        End If
        Me.tableMOV_FAC_REP_LineasFacturadasConExceso = CType(MyBase.Tables("MOV_FAC_REP_LineasFacturadasConExceso"),MOV_FAC_REP_LineasFacturadasConExcesoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_FAC_REP_LineasFacturadasConExceso) Is Nothing) Then
                Me.tableMOV_FAC_REP_LineasFacturadasConExceso.InitVars
            End If
        End If
        Me.tableMOV_FAC_REP_LineasSinConsumo = CType(MyBase.Tables("MOV_FAC_REP_LineasSinConsumo"),MOV_FAC_REP_LineasSinConsumoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_FAC_REP_LineasSinConsumo) Is Nothing) Then
                Me.tableMOV_FAC_REP_LineasSinConsumo.InitVars
            End If
        End If
        Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto = CType(MyBase.Tables("MOV_FAC_REP_LineasAgrupadasPorConcepto"),MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto) Is Nothing) Then
                Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.InitVars
            End If
        End If
        Me.tableMOV_FAC_REP_LineasConsumoDatos = CType(MyBase.Tables("MOV_FAC_REP_LineasConsumoDatos"),MOV_FAC_REP_LineasConsumoDatosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOV_FAC_REP_LineasConsumoDatos) Is Nothing) Then
                Me.tableMOV_FAC_REP_LineasConsumoDatos.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsReportesFacturacion"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsReportesFacturacion.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMOV_FAC_REP_LineasNoFacturadas = New MOV_FAC_REP_LineasNoFacturadasDataTable()
        MyBase.Tables.Add(Me.tableMOV_FAC_REP_LineasNoFacturadas)
        Me.tableMOV_FAC_REP_LineasFacturadasConExceso = New MOV_FAC_REP_LineasFacturadasConExcesoDataTable()
        MyBase.Tables.Add(Me.tableMOV_FAC_REP_LineasFacturadasConExceso)
        Me.tableMOV_FAC_REP_LineasSinConsumo = New MOV_FAC_REP_LineasSinConsumoDataTable()
        MyBase.Tables.Add(Me.tableMOV_FAC_REP_LineasSinConsumo)
        Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto = New MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable()
        MyBase.Tables.Add(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto)
        Me.tableMOV_FAC_REP_LineasConsumoDatos = New MOV_FAC_REP_LineasConsumoDatosDataTable()
        MyBase.Tables.Add(Me.tableMOV_FAC_REP_LineasConsumoDatos)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_FAC_REP_LineasNoFacturadas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_FAC_REP_LineasFacturadasConExceso() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_FAC_REP_LineasSinConsumo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_FAC_REP_LineasAgrupadasPorConcepto() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOV_FAC_REP_LineasConsumoDatos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsReportesFacturacion = New dsReportesFacturacion()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_FAC_REP_LineasNoFacturadasRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_FAC_REP_LineasNoFacturadasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_FAC_REP_LineasSinConsumoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_FAC_REP_LineasSinConsumoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOV_FAC_REP_LineasConsumoDatosRowChangeEventHandler(ByVal sender As Object, ByVal e As MOV_FAC_REP_LineasConsumoDatosRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOV_FAC_REP_LineasNoFacturadasDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_FAC_REP_LineasNoFacturadasRow)
        
        Private columnLinea As Global.System.Data.DataColumn
        
        Private columnEstadoLinea As Global.System.Data.DataColumn
        
        Private columnCuenta As Global.System.Data.DataColumn
        
        Private columnPlan As Global.System.Data.DataColumn
        
        Private columnMonto As Global.System.Data.DataColumn
        
        Private columnEmpleado As Global.System.Data.DataColumn
        
        Private columnFechaInicioContrato As Global.System.Data.DataColumn
        
        Private columnFechaFinContrato As Global.System.Data.DataColumn
        
        Private columnOperador As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "MOV_FAC_REP_LineasNoFacturadas"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaInicioContratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaInicioContrato
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaFinContratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaFinContrato
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OperadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperador
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MOV_FAC_REP_LineasNoFacturadasRow
            Get
                Return CType(Me.Rows(index), MOV_FAC_REP_LineasNoFacturadasRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasNoFacturadasRowChanging As MOV_FAC_REP_LineasNoFacturadasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasNoFacturadasRowChanged As MOV_FAC_REP_LineasNoFacturadasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasNoFacturadasRowDeleting As MOV_FAC_REP_LineasNoFacturadasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasNoFacturadasRowDeleted As MOV_FAC_REP_LineasNoFacturadasRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMOV_FAC_REP_LineasNoFacturadasRow(ByVal row As MOV_FAC_REP_LineasNoFacturadasRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMOV_FAC_REP_LineasNoFacturadasRow(ByVal Linea As String, ByVal EstadoLinea As String, ByVal Cuenta As String, ByVal Plan As String, ByVal Monto As Decimal, ByVal Empleado As String, ByVal FechaInicioContrato As Date, ByVal FechaFinContrato As Date, ByVal Operador As String) As MOV_FAC_REP_LineasNoFacturadasRow
            Dim rowMOV_FAC_REP_LineasNoFacturadasRow As MOV_FAC_REP_LineasNoFacturadasRow = CType(Me.NewRow, MOV_FAC_REP_LineasNoFacturadasRow)
            Dim columnValuesArray() As Object = New Object() {Linea, EstadoLinea, Cuenta, Plan, Monto, Empleado, FechaInicioContrato, FechaFinContrato, Operador}
            rowMOV_FAC_REP_LineasNoFacturadasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_FAC_REP_LineasNoFacturadasRow)
            Return rowMOV_FAC_REP_LineasNoFacturadasRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_FAC_REP_LineasNoFacturadasDataTable = CType(MyBase.Clone, MOV_FAC_REP_LineasNoFacturadasDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_FAC_REP_LineasNoFacturadasDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnLinea = MyBase.Columns("Linea")
            Me.columnEstadoLinea = MyBase.Columns("EstadoLinea")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnPlan = MyBase.Columns("Plan")
            Me.columnMonto = MyBase.Columns("Monto")
            Me.columnEmpleado = MyBase.Columns("Empleado")
            Me.columnFechaInicioContrato = MyBase.Columns("FechaInicioContrato")
            Me.columnFechaFinContrato = MyBase.Columns("FechaFinContrato")
            Me.columnOperador = MyBase.Columns("Operador")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnLinea = New Global.System.Data.DataColumn("Linea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinea)
            Me.columnEstadoLinea = New Global.System.Data.DataColumn("EstadoLinea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoLinea)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnPlan = New Global.System.Data.DataColumn("Plan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan)
            Me.columnMonto = New Global.System.Data.DataColumn("Monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto)
            Me.columnEmpleado = New Global.System.Data.DataColumn("Empleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado)
            Me.columnFechaInicioContrato = New Global.System.Data.DataColumn("FechaInicioContrato", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaInicioContrato)
            Me.columnFechaFinContrato = New Global.System.Data.DataColumn("FechaFinContrato", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaFinContrato)
            Me.columnOperador = New Global.System.Data.DataColumn("Operador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperador)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMOV_FAC_REP_LineasNoFacturadasRow() As MOV_FAC_REP_LineasNoFacturadasRow
            Return CType(Me.NewRow, MOV_FAC_REP_LineasNoFacturadasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_FAC_REP_LineasNoFacturadasRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_FAC_REP_LineasNoFacturadasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_FAC_REP_LineasNoFacturadasRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasNoFacturadasRowChanged(Me, New MOV_FAC_REP_LineasNoFacturadasRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasNoFacturadasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_FAC_REP_LineasNoFacturadasRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasNoFacturadasRowChanging(Me, New MOV_FAC_REP_LineasNoFacturadasRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasNoFacturadasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_FAC_REP_LineasNoFacturadasRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasNoFacturadasRowDeleted(Me, New MOV_FAC_REP_LineasNoFacturadasRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasNoFacturadasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_FAC_REP_LineasNoFacturadasRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasNoFacturadasRowDeleting(Me, New MOV_FAC_REP_LineasNoFacturadasRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasNoFacturadasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMOV_FAC_REP_LineasNoFacturadasRow(ByVal row As MOV_FAC_REP_LineasNoFacturadasRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReportesFacturacion = New dsReportesFacturacion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_FAC_REP_LineasNoFacturadasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MOV_FAC_REP_LineasFacturadasConExcesoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_FAC_REP_LineasFacturadasConExcesoRow)

        Private columnLinea As Global.System.Data.DataColumn

        Private columnEstadoLinea As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnPlan As Global.System.Data.DataColumn

        Private columnMonto As Global.System.Data.DataColumn

        Private columnEmpleado As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnPorcentaje As Global.System.Data.DataColumn

        Private columnOperador As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "MOV_FAC_REP_LineasFacturadasConExceso"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentaje
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OperadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperador
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MOV_FAC_REP_LineasFacturadasConExcesoRow
            Get
                Return CType(Me.Rows(index), MOV_FAC_REP_LineasFacturadasConExcesoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasFacturadasConExcesoRowChanging As MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasFacturadasConExcesoRowChanged As MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasFacturadasConExcesoRowDeleting As MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasFacturadasConExcesoRowDeleted As MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMOV_FAC_REP_LineasFacturadasConExcesoRow(ByVal row As MOV_FAC_REP_LineasFacturadasConExcesoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMOV_FAC_REP_LineasFacturadasConExcesoRow(ByVal Linea As String, ByVal EstadoLinea As String, ByVal Cuenta As String, ByVal Plan As String, ByVal Monto As Decimal, ByVal Empleado As String, ByVal Total As Decimal, ByVal Porcentaje As Decimal, ByVal Operador As String) As MOV_FAC_REP_LineasFacturadasConExcesoRow
            Dim rowMOV_FAC_REP_LineasFacturadasConExcesoRow As MOV_FAC_REP_LineasFacturadasConExcesoRow = CType(Me.NewRow, MOV_FAC_REP_LineasFacturadasConExcesoRow)
            Dim columnValuesArray() As Object = New Object() {Linea, EstadoLinea, Cuenta, Plan, Monto, Empleado, Total, Porcentaje, Operador}
            rowMOV_FAC_REP_LineasFacturadasConExcesoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_FAC_REP_LineasFacturadasConExcesoRow)
            Return rowMOV_FAC_REP_LineasFacturadasConExcesoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_FAC_REP_LineasFacturadasConExcesoDataTable = CType(MyBase.Clone, MOV_FAC_REP_LineasFacturadasConExcesoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_FAC_REP_LineasFacturadasConExcesoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnLinea = MyBase.Columns("Linea")
            Me.columnEstadoLinea = MyBase.Columns("EstadoLinea")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnPlan = MyBase.Columns("Plan")
            Me.columnMonto = MyBase.Columns("Monto")
            Me.columnEmpleado = MyBase.Columns("Empleado")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnPorcentaje = MyBase.Columns("Porcentaje")
            Me.columnOperador = MyBase.Columns("Operador")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnLinea = New Global.System.Data.DataColumn("Linea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinea)
            Me.columnEstadoLinea = New Global.System.Data.DataColumn("EstadoLinea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoLinea)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnPlan = New Global.System.Data.DataColumn("Plan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan)
            Me.columnMonto = New Global.System.Data.DataColumn("Monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto)
            Me.columnEmpleado = New Global.System.Data.DataColumn("Empleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnPorcentaje = New Global.System.Data.DataColumn("Porcentaje", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentaje)
            Me.columnOperador = New Global.System.Data.DataColumn("Operador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperador)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMOV_FAC_REP_LineasFacturadasConExcesoRow() As MOV_FAC_REP_LineasFacturadasConExcesoRow
            Return CType(Me.NewRow, MOV_FAC_REP_LineasFacturadasConExcesoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_FAC_REP_LineasFacturadasConExcesoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_FAC_REP_LineasFacturadasConExcesoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_FAC_REP_LineasFacturadasConExcesoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasFacturadasConExcesoRowChanged(Me, New MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasFacturadasConExcesoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_FAC_REP_LineasFacturadasConExcesoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasFacturadasConExcesoRowChanging(Me, New MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasFacturadasConExcesoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_FAC_REP_LineasFacturadasConExcesoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasFacturadasConExcesoRowDeleted(Me, New MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasFacturadasConExcesoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_FAC_REP_LineasFacturadasConExcesoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasFacturadasConExcesoRowDeleting(Me, New MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasFacturadasConExcesoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMOV_FAC_REP_LineasFacturadasConExcesoRow(ByVal row As MOV_FAC_REP_LineasFacturadasConExcesoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReportesFacturacion = New dsReportesFacturacion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_FAC_REP_LineasFacturadasConExcesoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MOV_FAC_REP_LineasSinConsumoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_FAC_REP_LineasSinConsumoRow)

        Private columnLinea As Global.System.Data.DataColumn

        Private columnEstadoLinea As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnPlan As Global.System.Data.DataColumn

        Private columnMonto As Global.System.Data.DataColumn

        Private columnEmpleado As Global.System.Data.DataColumn

        Private columnFechaInicioContrato As Global.System.Data.DataColumn

        Private columnFechaFinContrato As Global.System.Data.DataColumn

        Private columnConcepto As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnMinutos As Global.System.Data.DataColumn

        Private columnDatos As Global.System.Data.DataColumn

        Private columnMensajes As Global.System.Data.DataColumn

        Private columnOperador As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "MOV_FAC_REP_LineasSinConsumo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaInicioContratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaInicioContrato
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaFinContratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaFinContrato
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MinutosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinutos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DatosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MensajesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMensajes
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OperadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperador
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MOV_FAC_REP_LineasSinConsumoRow
            Get
                Return CType(Me.Rows(index), MOV_FAC_REP_LineasSinConsumoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasSinConsumoRowChanging As MOV_FAC_REP_LineasSinConsumoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasSinConsumoRowChanged As MOV_FAC_REP_LineasSinConsumoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasSinConsumoRowDeleting As MOV_FAC_REP_LineasSinConsumoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasSinConsumoRowDeleted As MOV_FAC_REP_LineasSinConsumoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMOV_FAC_REP_LineasSinConsumoRow(ByVal row As MOV_FAC_REP_LineasSinConsumoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMOV_FAC_REP_LineasSinConsumoRow(ByVal Linea As String, ByVal EstadoLinea As String, ByVal Cuenta As String, ByVal Plan As String, ByVal Monto As Decimal, ByVal Empleado As String, ByVal FechaInicioContrato As Date, ByVal FechaFinContrato As Date, ByVal Concepto As String, ByVal Total As Decimal, ByVal Minutos As String, ByVal Datos As Integer, ByVal Mensajes As String, ByVal Operador As String) As MOV_FAC_REP_LineasSinConsumoRow
            Dim rowMOV_FAC_REP_LineasSinConsumoRow As MOV_FAC_REP_LineasSinConsumoRow = CType(Me.NewRow, MOV_FAC_REP_LineasSinConsumoRow)
            Dim columnValuesArray() As Object = New Object() {Linea, EstadoLinea, Cuenta, Plan, Monto, Empleado, FechaInicioContrato, FechaFinContrato, Concepto, Total, Minutos, Datos, Mensajes, Operador}
            rowMOV_FAC_REP_LineasSinConsumoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_FAC_REP_LineasSinConsumoRow)
            Return rowMOV_FAC_REP_LineasSinConsumoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_FAC_REP_LineasSinConsumoDataTable = CType(MyBase.Clone, MOV_FAC_REP_LineasSinConsumoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_FAC_REP_LineasSinConsumoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnLinea = MyBase.Columns("Linea")
            Me.columnEstadoLinea = MyBase.Columns("EstadoLinea")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnPlan = MyBase.Columns("Plan")
            Me.columnMonto = MyBase.Columns("Monto")
            Me.columnEmpleado = MyBase.Columns("Empleado")
            Me.columnFechaInicioContrato = MyBase.Columns("FechaInicioContrato")
            Me.columnFechaFinContrato = MyBase.Columns("FechaFinContrato")
            Me.columnConcepto = MyBase.Columns("Concepto")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnMinutos = MyBase.Columns("Minutos")
            Me.columnDatos = MyBase.Columns("Datos")
            Me.columnMensajes = MyBase.Columns("Mensajes")
            Me.columnOperador = MyBase.Columns("Operador")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnLinea = New Global.System.Data.DataColumn("Linea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinea)
            Me.columnEstadoLinea = New Global.System.Data.DataColumn("EstadoLinea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoLinea)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnPlan = New Global.System.Data.DataColumn("Plan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan)
            Me.columnMonto = New Global.System.Data.DataColumn("Monto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto)
            Me.columnEmpleado = New Global.System.Data.DataColumn("Empleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado)
            Me.columnFechaInicioContrato = New Global.System.Data.DataColumn("FechaInicioContrato", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaInicioContrato)
            Me.columnFechaFinContrato = New Global.System.Data.DataColumn("FechaFinContrato", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaFinContrato)
            Me.columnConcepto = New Global.System.Data.DataColumn("Concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnMinutos = New Global.System.Data.DataColumn("Minutos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinutos)
            Me.columnDatos = New Global.System.Data.DataColumn("Datos", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatos)
            Me.columnMensajes = New Global.System.Data.DataColumn("Mensajes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMensajes)
            Me.columnOperador = New Global.System.Data.DataColumn("Operador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperador)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMOV_FAC_REP_LineasSinConsumoRow() As MOV_FAC_REP_LineasSinConsumoRow
            Return CType(Me.NewRow, MOV_FAC_REP_LineasSinConsumoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_FAC_REP_LineasSinConsumoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_FAC_REP_LineasSinConsumoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_FAC_REP_LineasSinConsumoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasSinConsumoRowChanged(Me, New MOV_FAC_REP_LineasSinConsumoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasSinConsumoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_FAC_REP_LineasSinConsumoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasSinConsumoRowChanging(Me, New MOV_FAC_REP_LineasSinConsumoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasSinConsumoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_FAC_REP_LineasSinConsumoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasSinConsumoRowDeleted(Me, New MOV_FAC_REP_LineasSinConsumoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasSinConsumoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_FAC_REP_LineasSinConsumoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasSinConsumoRowDeleting(Me, New MOV_FAC_REP_LineasSinConsumoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasSinConsumoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMOV_FAC_REP_LineasSinConsumoRow(ByVal row As MOV_FAC_REP_LineasSinConsumoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReportesFacturacion = New dsReportesFacturacion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_FAC_REP_LineasSinConsumoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_FAC_REP_LineasAgrupadasPorConceptoRow)

        Private columnLinea As Global.System.Data.DataColumn

        Private columnEstadoLinea As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnPlan As Global.System.Data.DataColumn

        Private columnCargo_Fijo As Global.System.Data.DataColumn

        Private columnEmpleado As Global.System.Data.DataColumn

        Private columnVoz As Global.System.Data.DataColumn

        Private columnDatos As Global.System.Data.DataColumn

        Private columnOtros As Global.System.Data.DataColumn

        Private columnDescuentos As Global.System.Data.DataColumn

        Private columnIVA As Global.System.Data.DataColumn

        Private columnMensajes_de_Texto As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnOperador As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "MOV_FAC_REP_LineasAgrupadasPorConcepto"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cargo_FijoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCargo_Fijo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VozColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVoz
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DatosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OtrosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtros
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuentos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Mensajes_de_TextoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMensajes_de_Texto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OperadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperador
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MOV_FAC_REP_LineasAgrupadasPorConceptoRow
            Get
                Return CType(Me.Rows(index), MOV_FAC_REP_LineasAgrupadasPorConceptoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasAgrupadasPorConceptoRowChanging As MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasAgrupadasPorConceptoRowChanged As MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasAgrupadasPorConceptoRowDeleting As MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasAgrupadasPorConceptoRowDeleted As MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMOV_FAC_REP_LineasAgrupadasPorConceptoRow(ByVal row As MOV_FAC_REP_LineasAgrupadasPorConceptoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMOV_FAC_REP_LineasAgrupadasPorConceptoRow(ByVal Linea As String, ByVal EstadoLinea As String, ByVal Cuenta As String, ByVal Plan As String, ByVal Cargo_Fijo As Decimal, ByVal Empleado As String, ByVal Voz As Decimal, ByVal Datos As Decimal, ByVal Otros As Decimal, ByVal Descuentos As Decimal, ByVal IVA As Decimal, ByVal Mensajes_de_Texto As Decimal, ByVal Total As Decimal, ByVal Operador As String) As MOV_FAC_REP_LineasAgrupadasPorConceptoRow
            Dim rowMOV_FAC_REP_LineasAgrupadasPorConceptoRow As MOV_FAC_REP_LineasAgrupadasPorConceptoRow = CType(Me.NewRow, MOV_FAC_REP_LineasAgrupadasPorConceptoRow)
            Dim columnValuesArray() As Object = New Object() {Linea, EstadoLinea, Cuenta, Plan, Cargo_Fijo, Empleado, Voz, Datos, Otros, Descuentos, IVA, Mensajes_de_Texto, Total, Operador}
            rowMOV_FAC_REP_LineasAgrupadasPorConceptoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_FAC_REP_LineasAgrupadasPorConceptoRow)
            Return rowMOV_FAC_REP_LineasAgrupadasPorConceptoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable = CType(MyBase.Clone, MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnLinea = MyBase.Columns("Linea")
            Me.columnEstadoLinea = MyBase.Columns("EstadoLinea")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnPlan = MyBase.Columns("Plan")
            Me.columnCargo_Fijo = MyBase.Columns("Cargo Fijo")
            Me.columnEmpleado = MyBase.Columns("Empleado")
            Me.columnVoz = MyBase.Columns("Voz")
            Me.columnDatos = MyBase.Columns("Datos")
            Me.columnOtros = MyBase.Columns("Otros")
            Me.columnDescuentos = MyBase.Columns("Descuentos")
            Me.columnIVA = MyBase.Columns("IVA")
            Me.columnMensajes_de_Texto = MyBase.Columns("Mensajes de Texto")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnOperador = MyBase.Columns("Operador")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnLinea = New Global.System.Data.DataColumn("Linea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinea)
            Me.columnEstadoLinea = New Global.System.Data.DataColumn("EstadoLinea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoLinea)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnPlan = New Global.System.Data.DataColumn("Plan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan)
            Me.columnCargo_Fijo = New Global.System.Data.DataColumn("Cargo Fijo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCargo_Fijo)
            Me.columnEmpleado = New Global.System.Data.DataColumn("Empleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado)
            Me.columnVoz = New Global.System.Data.DataColumn("Voz", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVoz)
            Me.columnDatos = New Global.System.Data.DataColumn("Datos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatos)
            Me.columnOtros = New Global.System.Data.DataColumn("Otros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtros)
            Me.columnDescuentos = New Global.System.Data.DataColumn("Descuentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuentos)
            Me.columnIVA = New Global.System.Data.DataColumn("IVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA)
            Me.columnMensajes_de_Texto = New Global.System.Data.DataColumn("Mensajes de Texto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMensajes_de_Texto)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnOperador = New Global.System.Data.DataColumn("Operador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperador)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMOV_FAC_REP_LineasAgrupadasPorConceptoRow() As MOV_FAC_REP_LineasAgrupadasPorConceptoRow
            Return CType(Me.NewRow, MOV_FAC_REP_LineasAgrupadasPorConceptoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_FAC_REP_LineasAgrupadasPorConceptoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_FAC_REP_LineasAgrupadasPorConceptoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasAgrupadasPorConceptoRowChanged(Me, New MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasAgrupadasPorConceptoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasAgrupadasPorConceptoRowChanging(Me, New MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasAgrupadasPorConceptoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_FAC_REP_LineasAgrupadasPorConceptoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasAgrupadasPorConceptoRowDeleted(Me, New MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasAgrupadasPorConceptoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_FAC_REP_LineasAgrupadasPorConceptoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasAgrupadasPorConceptoRowDeleting(Me, New MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasAgrupadasPorConceptoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMOV_FAC_REP_LineasAgrupadasPorConceptoRow(ByVal row As MOV_FAC_REP_LineasAgrupadasPorConceptoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReportesFacturacion = New dsReportesFacturacion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MOV_FAC_REP_LineasConsumoDatosDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOV_FAC_REP_LineasConsumoDatosRow)

        Private columnLinea As Global.System.Data.DataColumn

        Private columnEstadoLinea As Global.System.Data.DataColumn

        Private columnCuenta As Global.System.Data.DataColumn

        Private columnPlan As Global.System.Data.DataColumn

        Private columnEmpleado As Global.System.Data.DataColumn

        Private columnConsumo As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnOperador As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "MOV_FAC_REP_LineasConsumoDatos"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EstadoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlan
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ConsumoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OperadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperador
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MOV_FAC_REP_LineasConsumoDatosRow
            Get
                Return CType(Me.Rows(index), MOV_FAC_REP_LineasConsumoDatosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasConsumoDatosRowChanging As MOV_FAC_REP_LineasConsumoDatosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasConsumoDatosRowChanged As MOV_FAC_REP_LineasConsumoDatosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasConsumoDatosRowDeleting As MOV_FAC_REP_LineasConsumoDatosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MOV_FAC_REP_LineasConsumoDatosRowDeleted As MOV_FAC_REP_LineasConsumoDatosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMOV_FAC_REP_LineasConsumoDatosRow(ByVal row As MOV_FAC_REP_LineasConsumoDatosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMOV_FAC_REP_LineasConsumoDatosRow(ByVal Linea As String, ByVal EstadoLinea As String, ByVal Cuenta As String, ByVal Plan As String, ByVal Empleado As String, ByVal Consumo As Decimal, ByVal Total As Decimal, ByVal Operador As String) As MOV_FAC_REP_LineasConsumoDatosRow
            Dim rowMOV_FAC_REP_LineasConsumoDatosRow As MOV_FAC_REP_LineasConsumoDatosRow = CType(Me.NewRow, MOV_FAC_REP_LineasConsumoDatosRow)
            Dim columnValuesArray() As Object = New Object() {Linea, EstadoLinea, Cuenta, Plan, Empleado, Consumo, Total, Operador}
            rowMOV_FAC_REP_LineasConsumoDatosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOV_FAC_REP_LineasConsumoDatosRow)
            Return rowMOV_FAC_REP_LineasConsumoDatosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOV_FAC_REP_LineasConsumoDatosDataTable = CType(MyBase.Clone, MOV_FAC_REP_LineasConsumoDatosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOV_FAC_REP_LineasConsumoDatosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnLinea = MyBase.Columns("Linea")
            Me.columnEstadoLinea = MyBase.Columns("EstadoLinea")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnPlan = MyBase.Columns("Plan")
            Me.columnEmpleado = MyBase.Columns("Empleado")
            Me.columnConsumo = MyBase.Columns("Consumo")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnOperador = MyBase.Columns("Operador")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnLinea = New Global.System.Data.DataColumn("Linea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinea)
            Me.columnEstadoLinea = New Global.System.Data.DataColumn("EstadoLinea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoLinea)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnPlan = New Global.System.Data.DataColumn("Plan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlan)
            Me.columnEmpleado = New Global.System.Data.DataColumn("Empleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpleado)
            Me.columnConsumo = New Global.System.Data.DataColumn("Consumo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumo)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnOperador = New Global.System.Data.DataColumn("Operador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperador)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMOV_FAC_REP_LineasConsumoDatosRow() As MOV_FAC_REP_LineasConsumoDatosRow
            Return CType(Me.NewRow, MOV_FAC_REP_LineasConsumoDatosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOV_FAC_REP_LineasConsumoDatosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOV_FAC_REP_LineasConsumoDatosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOV_FAC_REP_LineasConsumoDatosRowChangedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasConsumoDatosRowChanged(Me, New MOV_FAC_REP_LineasConsumoDatosRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasConsumoDatosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOV_FAC_REP_LineasConsumoDatosRowChangingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasConsumoDatosRowChanging(Me, New MOV_FAC_REP_LineasConsumoDatosRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasConsumoDatosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOV_FAC_REP_LineasConsumoDatosRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasConsumoDatosRowDeleted(Me, New MOV_FAC_REP_LineasConsumoDatosRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasConsumoDatosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOV_FAC_REP_LineasConsumoDatosRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOV_FAC_REP_LineasConsumoDatosRowDeleting(Me, New MOV_FAC_REP_LineasConsumoDatosRowChangeEvent(CType(e.Row, MOV_FAC_REP_LineasConsumoDatosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMOV_FAC_REP_LineasConsumoDatosRow(ByVal row As MOV_FAC_REP_LineasConsumoDatosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReportesFacturacion = New dsReportesFacturacion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOV_FAC_REP_LineasConsumoDatosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_FAC_REP_LineasNoFacturadasRow
        Inherits Global.System.Data.DataRow

        Private tableMOV_FAC_REP_LineasNoFacturadas As MOV_FAC_REP_LineasNoFacturadasDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_FAC_REP_LineasNoFacturadas = CType(Me.Table, MOV_FAC_REP_LineasNoFacturadasDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Linea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.LineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Linea' in table 'MOV_FAC_REP_LineasNoFacturadas' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.LineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoLinea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.EstadoLineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoLinea' in table 'MOV_FAC_REP_LineasNoFacturadas' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.EstadoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'MOV_FAC_REP_LineasNoFacturadas' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.PlanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plan' in table 'MOV_FAC_REP_LineasNoFacturadas' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.PlanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Monto() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.MontoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto' in table 'MOV_FAC_REP_LineasNoFacturadas' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.MontoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Empleado() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.EmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Empleado' in table 'MOV_FAC_REP_LineasNoFacturadas' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.EmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaInicioContrato() As Date
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaInicioContratoColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaInicioContrato' in table 'MOV_FAC_REP_LineasNoFacturad" & _
                            "as' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaInicioContratoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaFinContrato() As Date
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaFinContratoColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaFinContrato' in table 'MOV_FAC_REP_LineasNoFacturadas'" & _
                            " is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaFinContratoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Operador() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.OperadorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operador' in table 'MOV_FAC_REP_LineasNoFacturadas' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.OperadorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.LineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.LineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.EstadoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.EstadoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPlanNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.PlanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPlanNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.PlanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.MontoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMontoNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.MontoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.EmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpleadoNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.EmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaInicioContratoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaInicioContratoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaInicioContratoNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaInicioContratoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaFinContratoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaFinContratoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaFinContratoNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.FechaFinContratoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOperadorNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasNoFacturadas.OperadorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOperadorNull()
            Me(Me.tableMOV_FAC_REP_LineasNoFacturadas.OperadorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_FAC_REP_LineasFacturadasConExcesoRow
        Inherits Global.System.Data.DataRow

        Private tableMOV_FAC_REP_LineasFacturadasConExceso As MOV_FAC_REP_LineasFacturadasConExcesoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_FAC_REP_LineasFacturadasConExceso = CType(Me.Table, MOV_FAC_REP_LineasFacturadasConExcesoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Linea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.LineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Linea' in table 'MOV_FAC_REP_LineasFacturadasConExceso' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.LineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoLinea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EstadoLineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoLinea' in table 'MOV_FAC_REP_LineasFacturadasConExces" & _
                            "o' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EstadoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'MOV_FAC_REP_LineasFacturadasConExceso' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PlanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plan' in table 'MOV_FAC_REP_LineasFacturadasConExceso' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PlanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Monto() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.MontoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto' in table 'MOV_FAC_REP_LineasFacturadasConExceso' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.MontoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Empleado() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Empleado' in table 'MOV_FAC_REP_LineasFacturadasConExceso' " & _
                            "is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.TotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'MOV_FAC_REP_LineasFacturadasConExceso' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Porcentaje() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PorcentajeColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Porcentaje' in table 'MOV_FAC_REP_LineasFacturadasConExceso" & _
                            "' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PorcentajeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Operador() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.OperadorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operador' in table 'MOV_FAC_REP_LineasFacturadasConExceso' " & _
                            "is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.OperadorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.LineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.LineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EstadoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EstadoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPlanNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PlanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPlanNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PlanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.MontoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMontoNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.MontoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpleadoNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.EmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.TotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPorcentajeNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PorcentajeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPorcentajeNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.PorcentajeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOperadorNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.OperadorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOperadorNull()
            Me(Me.tableMOV_FAC_REP_LineasFacturadasConExceso.OperadorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_FAC_REP_LineasSinConsumoRow
        Inherits Global.System.Data.DataRow

        Private tableMOV_FAC_REP_LineasSinConsumo As MOV_FAC_REP_LineasSinConsumoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_FAC_REP_LineasSinConsumo = CType(Me.Table, MOV_FAC_REP_LineasSinConsumoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Linea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.LineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Linea' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.LineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoLinea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.EstadoLineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoLinea' in table 'MOV_FAC_REP_LineasSinConsumo' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.EstadoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.PlanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plan' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.PlanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Monto() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MontoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MontoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Empleado() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.EmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Empleado' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.EmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaInicioContrato() As Date
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaInicioContratoColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaInicioContrato' in table 'MOV_FAC_REP_LineasSinConsumo" & _
                            "' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaInicioContratoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaFinContrato() As Date
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaFinContratoColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaFinContrato' in table 'MOV_FAC_REP_LineasSinConsumo' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaFinContratoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Concepto() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.ConceptoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concepto' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.ConceptoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.TotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Minutos() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MinutosColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Minutos' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MinutosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Datos() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.DatosColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Datos' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.DatosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Mensajes() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MensajesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mensajes' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MensajesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Operador() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasSinConsumo.OperadorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operador' in table 'MOV_FAC_REP_LineasSinConsumo' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasSinConsumo.OperadorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.LineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.LineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.EstadoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.EstadoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPlanNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.PlanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPlanNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.PlanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.MontoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMontoNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MontoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.EmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpleadoNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.EmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaInicioContratoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaInicioContratoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaInicioContratoNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaInicioContratoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaFinContratoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaFinContratoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaFinContratoNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.FechaFinContratoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.ConceptoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetConceptoNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.ConceptoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.TotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMinutosNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.MinutosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMinutosNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MinutosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDatosNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.DatosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDatosNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.DatosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMensajesNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.MensajesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMensajesNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.MensajesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOperadorNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasSinConsumo.OperadorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOperadorNull()
            Me(Me.tableMOV_FAC_REP_LineasSinConsumo.OperadorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_FAC_REP_LineasAgrupadasPorConceptoRow
        Inherits Global.System.Data.DataRow

        Private tableMOV_FAC_REP_LineasAgrupadasPorConcepto As MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto = CType(Me.Table, MOV_FAC_REP_LineasAgrupadasPorConceptoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Linea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.LineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Linea' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.LineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoLinea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EstadoLineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoLinea' in table 'MOV_FAC_REP_LineasAgrupadasPorConcep" & _
                            "to' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EstadoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.PlanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plan' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.PlanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cargo_Fijo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Cargo_FijoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cargo Fijo' in table 'MOV_FAC_REP_LineasAgrupadasPorConcept" & _
                            "o' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Cargo_FijoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Empleado() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Empleado' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto'" & _
                            " is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Voz() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.VozColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Voz' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.VozColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Datos() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DatosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Datos' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DatosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Otros() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OtrosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Otros' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OtrosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descuentos() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DescuentosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Descuentos' in table 'MOV_FAC_REP_LineasAgrupadasPorConcept" & _
                            "o' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DescuentosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.IVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.IVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Mensajes_de_Texto() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Mensajes_de_TextoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mensajes de Texto' in table 'MOV_FAC_REP_LineasAgrupadasPor" & _
                            "Concepto' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Mensajes_de_TextoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.TotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Operador() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OperadorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operador' in table 'MOV_FAC_REP_LineasAgrupadasPorConcepto'" & _
                            " is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OperadorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.LineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.LineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EstadoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EstadoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPlanNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.PlanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPlanNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.PlanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCargo_FijoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Cargo_FijoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCargo_FijoNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Cargo_FijoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpleadoNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.EmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVozNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.VozColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVozNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.VozColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDatosNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DatosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDatosNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DatosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOtrosNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OtrosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOtrosNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OtrosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescuentosNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DescuentosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescuentosNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.DescuentosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIVANull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.IVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIVANull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.IVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMensajes_de_TextoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Mensajes_de_TextoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMensajes_de_TextoNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.Mensajes_de_TextoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.TotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOperadorNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OperadorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOperadorNull()
            Me(Me.tableMOV_FAC_REP_LineasAgrupadasPorConcepto.OperadorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOV_FAC_REP_LineasConsumoDatosRow
        Inherits Global.System.Data.DataRow

        Private tableMOV_FAC_REP_LineasConsumoDatos As MOV_FAC_REP_LineasConsumoDatosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOV_FAC_REP_LineasConsumoDatos = CType(Me.Table, MOV_FAC_REP_LineasConsumoDatosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Linea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.LineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Linea' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.LineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EstadoLinea() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.EstadoLineaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstadoLinea' in table 'MOV_FAC_REP_LineasConsumoDatos' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.EstadoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cuenta() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.CuentaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cuenta' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.CuentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plan() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.PlanColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Plan' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.PlanColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Empleado() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.EmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Empleado' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.EmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Consumo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.ConsumoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Consumo' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.ConsumoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.TotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Operador() As String
            Get
                Try
                    Return CType(Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.OperadorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operador' in table 'MOV_FAC_REP_LineasConsumoDatos' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.OperadorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.LineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.LineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEstadoLineaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.EstadoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEstadoLineaNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.EstadoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.CuentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCuentaNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.CuentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPlanNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.PlanColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPlanNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.PlanColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.EmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpleadoNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.EmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsConsumoNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.ConsumoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetConsumoNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.ConsumoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.TotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.TotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOperadorNull() As Boolean
            Return Me.IsNull(Me.tableMOV_FAC_REP_LineasConsumoDatos.OperadorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOperadorNull()
            Me(Me.tableMOV_FAC_REP_LineasConsumoDatos.OperadorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_FAC_REP_LineasNoFacturadasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_FAC_REP_LineasNoFacturadasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_FAC_REP_LineasNoFacturadasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_FAC_REP_LineasNoFacturadasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_FAC_REP_LineasFacturadasConExcesoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_FAC_REP_LineasFacturadasConExcesoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_FAC_REP_LineasFacturadasConExcesoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_FAC_REP_LineasFacturadasConExcesoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_FAC_REP_LineasSinConsumoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_FAC_REP_LineasSinConsumoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_FAC_REP_LineasSinConsumoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_FAC_REP_LineasSinConsumoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_FAC_REP_LineasAgrupadasPorConceptoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_FAC_REP_LineasAgrupadasPorConceptoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_FAC_REP_LineasAgrupadasPorConceptoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_FAC_REP_LineasAgrupadasPorConceptoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOV_FAC_REP_LineasConsumoDatosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOV_FAC_REP_LineasConsumoDatosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOV_FAC_REP_LineasConsumoDatosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOV_FAC_REP_LineasConsumoDatosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
